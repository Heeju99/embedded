#include "ap_main.h"

enum {STOP, RUN, CLEAR};

Button_Handler_t hBtnRun;
Button_Handler_t hBtnStop;
Button_Handler_t hBtnClear;

int ap_main()
{
   uint32_t data1 = 1;
   static uint32_t data = 0;
   int led_state = STOP;
   uint32_t digit_1 = 0;
   uint32_t digit_10 = 0;
   uint32_t digit_100 = 0;
   uint32_t digit_1000 = 0;

   while(1)
   {

      switch(led_state)
      {
         case STOP :
            if(Button_GetState(&hBtnClear) == ACT_PUSHED){
               led_state = CLEAR;
            } else if(Button_GetState(&hBtnRun) == ACT_PUSHED){
               led_state = RUN;
            }
            digit_1 = data % 10;
            digit_10 = (data/10) % 10;
            digit_100 = (data/100) % 10;
            digit_1000 = (data/1000) % 10;

            Decode_Data(digit_1000, 1);
            delay(10);
            Decode_Data(digit_100, 2);
            delay(10);
            Decode_Data(digit_10, 3);
            delay(10);
            Decode_Data(digit_1, 4);
            delay(10);
            break;

         case RUN :
            if(data == 10000){
               data = 0;
            } else{
				if(Button_GetState(&hBtnStop) == ACT_PUSHED){
				   led_state = STOP;
				} else if(Button_GetState(&hBtnClear) == ACT_PUSHED){
				   led_state = CLEAR;
				}

				digit_1 = data % 10;
				digit_10 = (data/10) % 10;
				digit_100 = (data/100) % 10;
				digit_1000 = (data/1000) % 10;

				Decode_Data(digit_1000, 1);
				delay(10);
				Decode_Data(digit_100, 2);
				delay(10);
				Decode_Data(digit_10, 3);
				delay(10);
				Decode_Data(digit_1, 4);
				delay(10);
            }
            data++;
            break;

         case CLEAR :
            data = 0;
            if(Button_GetState(&hBtnRun) == ACT_PUSHED){
               led_state = RUN;
            } else if(Button_GetState(&hBtnStop) == ACT_PUSHED){
               led_state = STOP;
            }
            Decode_Data(0, 5);
            break;
         }
      delay(10);
   }
   return 0;
}

void ap_Init()
{
   SystemClock_Init();
   LedBar_Init();
   FND_Init();
   Button_Init(&hBtnRun, GPIOB, 5);
   Button_Init(&hBtnStop, GPIOB, 3);
   Button_Init(&hBtnClear, GPIOA, 10);
}
