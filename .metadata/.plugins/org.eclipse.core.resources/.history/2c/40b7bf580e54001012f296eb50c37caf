#include "Listener.h"
#include "usart.h"
#include "string.h"

static void Listener_CheckButton();
static void Listener_CheckUart();

static uint8_t rcvData = 0;
static Que_TypeDef uartRxQue;

static uint8_t        rcvData;
int            bufPos = 0;
static const char     correctPassword[PASS_LEN + 1] = "1234";
static inputData_TypeDef inputData;
char           uartBuffer[PASS_LEN + 1];


void Listener_Init()
{
	Button_Init(&hBtnMode, GPIOB, GPIO_PIN_5);
	Que_Init(&uartRxQue);
	HAL_UART_Receive_IT(&huart2, &rcvData, 1); // uart recv interrupt enable
	//additional
}

void Listener_Excute()
{
	Listener_CheckButton();
	Listener_CheckUart();
}

void Listener_CheckButton()
{
	static uint32_t prevChkBtnTime = 0;
	uint32_t curTick = HAL_GetTick();
	if (curTick - prevChkBtnTime < 100) {
		return;
	}
	prevChkBtnTime = curTick;

	inputData_TypeDef inputData;

	if (Button_GetState(&hBtnMode) == ACT_RELEASED) {
		inputData.id = MODE;
		inputData.data = MODE_ACT;
		Controller_SetInputData(inputData);
	}

}

void Listener_CheckUart()
{
	if (isQueEmpty(&uartRxQue)) {
		return;
	}
	int uartRxData = deQue(&uartRxQue);

	inputData_TypeDef inputData;

	if (uartRxData == 'm') {
		inputData.id = MODE;
		inputData.data = MODE_ACT;
		Controller_SetInputData(inputData);
	}
	//else if (uartRxData == 'r') {
	//	inputData.id = STOPWATCH_RUN_STOP;
	//	inputData.data = STOPWATCH_ACT;
	//	Controller_SetInputData(inputData);
	//}
	//else if (uartRxData == 's') {
	//	inputData.id = STOPWATCH_RUN_STOP;
	//	inputData.data = STOPWATCH_ACT;
	//	Controller_SetInputData(inputData);
	//}
	//else if (uartRxData == 'c') {
	//	inputData.id = STOPWATCH_CLEAR;
	//	inputData.data = STOPWATCH_ACT;
	//	Controller_SetInputData(inputData);
	//}
}

void Listener_UartCallBack()
{
	enQue(&uartRxQue, rcvData);
	HAL_UART_Receive_IT(&huart2, &rcvData, 1); // interrupt enable
}






//***********************************

//#include "Listener.h"
//#include "usart.h"
//#include "Model_mode.h"
//#include "Controller.h"
//#include <string.h>







//void Listener_CheckUart()
//{
//	int byte;
//
//	while (!isQueEmpty(&uartRxQue)) {
//		byte = deQue(&uartRxQue);
//
//		if (byte == 'm') {
//			inputData.id   = MODE;
//			inputData.data = MODE_ACT;
//			Controller_SetInputData(inputData);
//		}
//		else if (byte == 'i') {
//			login_controldata.data_pw_input = 1;
//			bufPos = 0;              // 새 입력 시작
//		}
//		// 비밀번호 입력 모드일 때만 숫자 저장
//		if (login_controldata.data_pw_input) {
//			if (byte >= '0' && byte <= '9' && bufPos < PASS_LEN) {
//				uartBuffer[bufPos++] = (char)byte;
//			}
//			if (bufPos == PASS_LEN) {
//				ComparePassword();
//				login_controldata.data_pw_input = 0;
//				bufPos = 0;
//			}
//		}
//	}
//}


void ComparePassword() {
	uartBuffer[PASS_LEN] = '\0';
	if (strcmp(uartBuffer, correctPassword) == 0) {
		login_controldata.data_pw_correct = 1;
	} else {
		login_controldata.data_pw_correct = 0;
	}
	Controller_SetInputData(inputData);
}


















