#include "Presenter_StopWatch.h"
#include <string.h>


void Presenter_StopWatch_Init()
{
	LCD_Init(&hi2c1);
}

void Presenter_StopWatch_Excute()
{
	stopWatch_t stopWatchData;
	stopWatch_t *pStopWatchData;

	osEvent evt = osMailGet(stopWatchDataMailBox, osWaitForever);
	if(evt.status == osEventMail){
		pStopWatchData = evt.value.p;
		memcpy(&stopWatchData, pStopWatchData, sizeof(stopWatch_t));
		osMailFree(stopWatchDataMailBox, pStopWatchData); //Free mem
	}
		Presenter_StopWatch_FND(stopWatchData);
		Presenter_StopWatch_LCD(stopWatchData);
}



void Presenter_StopWatch_FND(stopWatch_t stopWatchData)
{
	FND_WriteData(stopWatchData.min%10*1000 + stopWatchData.sec%100 *10 + stopWatchData.msec/100);

	if(stopWatchData.msec%100 <50){
		FND_WriteDp(FND_DP_10, FND_DP_ON);
	}
	else{
		FND_WriteDp(FND_DP_10,FND_DP_OFF);
	}

	if(stopWatchData.msec <500){
		FND_WriteDp(FND_DP_1000, FND_DP_ON);
	}
	else{
		FND_WriteDp(FND_DP_1000,FND_DP_OFF);
	}
}

void Presenter_StopWatch_LCD(stopWatch_t stopWatchData)
{
	char str[50];
	sprintf(str, "stp:%02d:%02d:%02d", stopWatchData.min, stopWatchData.sec, stopWatchData.msec/10);
	LCD_writeStringXY(0, 0, str);

	if(evt.status == osEventMessage){
		evtState = evt.value.v;

		if(evtState == EVENT_RUN_STOP){
			char str1[50];
			sprintf(str1, "RUN");
			LCD_writeStringXY(1, 0, str1);
		}
		else if(evtState == EVENT_CLEAR){
			char str2[50];
			sprintf(str2, "CLEAR");
			LCD_writeStringXY(1, 0, str2);
		}
	}
}
