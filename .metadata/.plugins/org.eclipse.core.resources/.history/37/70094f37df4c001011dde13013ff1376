#include "ap_main.h"

enum {RUN, STOP, CLEAR};

Button_Handler_t hBtnRun;
Button_Handler_t hBtnStop;
Button_Handler_t hBtnClear;

int ap_main()
{
	uint8_t data = 1;
	int led_state = OFF;


	while(1)
	{

		switch(led_state)
		{
			case RUN :
				data = (data << 1) | (data >> 7);
				LEDBar_Write(data);
				if(Button_GetState(&hBtnClear) == ACT_PUSHED){
					led_state = CLEAR;
				} else if(Button_GetState(&hBtnStop) == ACT_PUSHED){
					led_state = STOP;
				}
				break;

			case STOP :
				data = (data >> 1) | (data << 7);
				LEDBar_Write(data);
				if(Button_GetState(&hBtnRun) == ACT_PUSHED){
					led_state = RUN;
				} else if(Button_GetState(&hBtnClear) == ACT_PUSHED){
					led_state = CLEAR;
				}
				break;

			case CLEAR :
				LEDBar_Write(0x00);
				if(Button_GetState(&hBtnRun) == ACT_PUSHED){
					led_state = RUN;
				} else if(Button_GetState(&hBtnStop) == ACT_PUSHED){
					led_state = STOP;
				}
				break;
			}
		delay(100);
	}
	return 0;
}

void ap_Init()
{
	SystemClock_Init();
	LedBar_Init();
	Button_Init(&hBtnRun, GPIOB, 5);
	Button_Init(&hBtnStop, GPIOB, 3);
	Button_Init(&hBtnClear, GPIOA, 10);
}

