#include "Listener.h"
#include "usart.h"

static void Listener_CheckButton(); //외부에서 못부름
static void Listener_CheckUART();

void Listener_Init()
{
	  Button_Init(&hBtnMode, GPIOB,  GPIO_PIN_5);
	  Button_Init(&hBtnRunStop, GPIOB, GPIO_PIN_3);
	  Button_Init(&hBtnClear, GPIOA, GPIO_PIN_10);
}

void Listener_Execute()
{
	Listener_CheckUART();
	Listener_CheckButton();
}

void Listener_CheckButton()
{
	static uint32_t prevChkBtnTime = 0;
	uint32_t curTick = HAL_GetTick(); //1ms간격으로 1씩 증가하는 함수
	if(curTick - prevChkBtnTime < 100){ //100ms 간격으로 아래 버튼 함수 실행
		return;
	}
	prevChkBtnTime = curTick;
	inputData_TypeDef inputData;

	if(Button_GetState(&hBtnMode) == ACT_RELEASED){
		inputData.id = MODE;
		inputData.data = MODE_ACT;
		Controller_SetInputData(inputData);
	}
	else if (Button_GetState(&hBtnRunStop) == ACT_PUSHED){
		inputData.id = STOPWATCH_RUNSTOP;
		inputData.data = STOPWATCH_ACT;
		Controller_SetInputData(inputData);
	}
	else if (Button_GetState(&hBtnClear) == ACT_PUSHED){
		inputData.id = STOPWATCH_CLEAR;
		inputData.data = STOPWATCH_ACT;
		Controller_SetInputData(inputData);
	}
}

void Listener_CheckUART()
{
	inputData_TypeDef inputData;
	uint8_t rcvData = 0;

	HAL_UART_Receive(&huart2, &rcvData, 1, 1000);

	if(rcvData == 'm'){
			inputData.id = MODE;
			inputData.data = MODE_ACT;
			Controller_SetInputData(inputData);
	}
	else if (rcvData == 'r'){
			inputData.id = STOPWATCH_RUNSTOP;
			inputData.data = STOPWATCH_ACT;
			Controller_SetInputData(inputData);
	}
	else if (rcvData == 's'){
			inputData.id = STOPWATCH_RUNSTOP;
			inputData.data = STOPWATCH_ACT;
			Controller_SetInputData(inputData);
	}
	else if (rcvData == 'c'){
			inputData.id = STOPWATCH_CLEAR;
			inputData.data = STOPWATCH_ACT;
			Controller_SetInputData(inputData);
		}

}

