
250619_LED_Button1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000d40  08000198  08000198  00001198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000ed8  08000ed8  00002060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000ed8  08000ed8  00002060  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000ed8  08000ed8  00002060  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000ed8  08000ed8  00002060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000ed8  08000ed8  00001ed8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000edc  08000edc  00001edc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000060  20000000  08000ee0  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000040  20000060  08000f40  00002060  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200000a0  08000f40  000020a0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00002060  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000e12  00000000  00000000  00002090  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000771  00000000  00000000  00002ea2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000120  00000000  00000000  00003618  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000b8  00000000  00000000  00003738  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000cbf9  00000000  00000000  000037f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001f7e  00000000  00000000  000103e9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004899d  00000000  00000000  00012367  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0005ad04  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000258  00000000  00000000  0005ad48  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000049  00000000  00000000  0005afa0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	@ (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	@ (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000060 	.word	0x20000060
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08000ec0 	.word	0x08000ec0

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	@ (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	@ (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	@ (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000064 	.word	0x20000064
 80001d4:	08000ec0 	.word	0x08000ec0

080001d8 <ap_main>:
Button_Handler_t hBtnCLEAR;

enum {STOP, RUN, CLEAR};

int ap_main()
{
 80001d8:	b580      	push	{r7, lr}
 80001da:	b088      	sub	sp, #32
 80001dc:	af00      	add	r7, sp, #0

	uint32_t count = 0;
 80001de:	2300      	movs	r3, #0
 80001e0:	61fb      	str	r3, [r7, #28]
	uint32_t digit_1000 = 0;
 80001e2:	2300      	movs	r3, #0
 80001e4:	617b      	str	r3, [r7, #20]
	uint32_t digit_100 = 0;
 80001e6:	2300      	movs	r3, #0
 80001e8:	613b      	str	r3, [r7, #16]
	uint32_t digit_10 = 0;
 80001ea:	2300      	movs	r3, #0
 80001ec:	60fb      	str	r3, [r7, #12]
	uint32_t digit_1 = 0;
 80001ee:	2300      	movs	r3, #0
 80001f0:	60bb      	str	r3, [r7, #8]
	uint8_t DP = 0;
 80001f2:	2300      	movs	r3, #0
 80001f4:	71fb      	strb	r3, [r7, #7]
	int seg_state = STOP;
 80001f6:	2300      	movs	r3, #0
 80001f8:	61bb      	str	r3, [r7, #24]

	while(1)
	{
		switch(seg_state)
 80001fa:	69bb      	ldr	r3, [r7, #24]
 80001fc:	2b02      	cmp	r3, #2
 80001fe:	f000 80f1 	beq.w	80003e4 <ap_main+0x20c>
 8000202:	69bb      	ldr	r3, [r7, #24]
 8000204:	2b02      	cmp	r3, #2
 8000206:	dcf8      	bgt.n	80001fa <ap_main+0x22>
 8000208:	69bb      	ldr	r3, [r7, #24]
 800020a:	2b00      	cmp	r3, #0
 800020c:	d003      	beq.n	8000216 <ap_main+0x3e>
 800020e:	69bb      	ldr	r3, [r7, #24]
 8000210:	2b01      	cmp	r3, #1
 8000212:	d06e      	beq.n	80002f2 <ap_main+0x11a>
 8000214:	e7f1      	b.n	80001fa <ap_main+0x22>
		{
		case STOP:
			count = count;
			if(Button_GetState(&hBtnRUN) == ACT_PUSHED){
 8000216:	4881      	ldr	r0, [pc, #516]	@ (800041c <ap_main+0x244>)
 8000218:	f000 f949 	bl	80004ae <Button_GetState>
 800021c:	4603      	mov	r3, r0
 800021e:	2b01      	cmp	r3, #1
 8000220:	d102      	bne.n	8000228 <ap_main+0x50>
				seg_state = RUN;
 8000222:	2301      	movs	r3, #1
 8000224:	61bb      	str	r3, [r7, #24]
 8000226:	e007      	b.n	8000238 <ap_main+0x60>
			}
			else if(Button_GetState(&hBtnCLEAR) == ACT_PUSHED){
 8000228:	487d      	ldr	r0, [pc, #500]	@ (8000420 <ap_main+0x248>)
 800022a:	f000 f940 	bl	80004ae <Button_GetState>
 800022e:	4603      	mov	r3, r0
 8000230:	2b01      	cmp	r3, #1
 8000232:	d101      	bne.n	8000238 <ap_main+0x60>
				seg_state = CLEAR;
 8000234:	2302      	movs	r3, #2
 8000236:	61bb      	str	r3, [r7, #24]
			}

			digit_1000 = (count / 1000)%10;
 8000238:	69fb      	ldr	r3, [r7, #28]
 800023a:	4a7a      	ldr	r2, [pc, #488]	@ (8000424 <ap_main+0x24c>)
 800023c:	fba2 2303 	umull	r2, r3, r2, r3
 8000240:	099a      	lsrs	r2, r3, #6
 8000242:	4b79      	ldr	r3, [pc, #484]	@ (8000428 <ap_main+0x250>)
 8000244:	fba3 1302 	umull	r1, r3, r3, r2
 8000248:	08d9      	lsrs	r1, r3, #3
 800024a:	460b      	mov	r3, r1
 800024c:	009b      	lsls	r3, r3, #2
 800024e:	440b      	add	r3, r1
 8000250:	005b      	lsls	r3, r3, #1
 8000252:	1ad3      	subs	r3, r2, r3
 8000254:	617b      	str	r3, [r7, #20]
			digit_100 = (count / 100)%10;
 8000256:	69fb      	ldr	r3, [r7, #28]
 8000258:	4a74      	ldr	r2, [pc, #464]	@ (800042c <ap_main+0x254>)
 800025a:	fba2 2303 	umull	r2, r3, r2, r3
 800025e:	095a      	lsrs	r2, r3, #5
 8000260:	4b71      	ldr	r3, [pc, #452]	@ (8000428 <ap_main+0x250>)
 8000262:	fba3 1302 	umull	r1, r3, r3, r2
 8000266:	08d9      	lsrs	r1, r3, #3
 8000268:	460b      	mov	r3, r1
 800026a:	009b      	lsls	r3, r3, #2
 800026c:	440b      	add	r3, r1
 800026e:	005b      	lsls	r3, r3, #1
 8000270:	1ad3      	subs	r3, r2, r3
 8000272:	613b      	str	r3, [r7, #16]
			digit_10 = (count / 10)%10;
 8000274:	69fb      	ldr	r3, [r7, #28]
 8000276:	4a6c      	ldr	r2, [pc, #432]	@ (8000428 <ap_main+0x250>)
 8000278:	fba2 2303 	umull	r2, r3, r2, r3
 800027c:	08da      	lsrs	r2, r3, #3
 800027e:	4b6a      	ldr	r3, [pc, #424]	@ (8000428 <ap_main+0x250>)
 8000280:	fba3 1302 	umull	r1, r3, r3, r2
 8000284:	08d9      	lsrs	r1, r3, #3
 8000286:	460b      	mov	r3, r1
 8000288:	009b      	lsls	r3, r3, #2
 800028a:	440b      	add	r3, r1
 800028c:	005b      	lsls	r3, r3, #1
 800028e:	1ad3      	subs	r3, r2, r3
 8000290:	60fb      	str	r3, [r7, #12]
			digit_1 = (count % 10);
 8000292:	69fa      	ldr	r2, [r7, #28]
 8000294:	4b64      	ldr	r3, [pc, #400]	@ (8000428 <ap_main+0x250>)
 8000296:	fba3 1302 	umull	r1, r3, r3, r2
 800029a:	08d9      	lsrs	r1, r3, #3
 800029c:	460b      	mov	r3, r1
 800029e:	009b      	lsls	r3, r3, #2
 80002a0:	440b      	add	r3, r1
 80002a2:	005b      	lsls	r3, r3, #1
 80002a4:	1ad3      	subs	r3, r2, r3
 80002a6:	60bb      	str	r3, [r7, #8]

			delay(10);
 80002a8:	200a      	movs	r0, #10
 80002aa:	f000 fd95 	bl	8000dd8 <delay>
			FND_Write(digit_1000, DP, 1);
 80002ae:	79fb      	ldrb	r3, [r7, #7]
 80002b0:	2201      	movs	r2, #1
 80002b2:	4619      	mov	r1, r3
 80002b4:	6978      	ldr	r0, [r7, #20]
 80002b6:	f000 f971 	bl	800059c <FND_Write>
			delay(10);
 80002ba:	200a      	movs	r0, #10
 80002bc:	f000 fd8c 	bl	8000dd8 <delay>
			FND_Write(digit_100, DP, 2);
 80002c0:	79fb      	ldrb	r3, [r7, #7]
 80002c2:	2202      	movs	r2, #2
 80002c4:	4619      	mov	r1, r3
 80002c6:	6938      	ldr	r0, [r7, #16]
 80002c8:	f000 f968 	bl	800059c <FND_Write>
			delay(10);
 80002cc:	200a      	movs	r0, #10
 80002ce:	f000 fd83 	bl	8000dd8 <delay>
			FND_Write(digit_10, DP, 3);
 80002d2:	79fb      	ldrb	r3, [r7, #7]
 80002d4:	2203      	movs	r2, #3
 80002d6:	4619      	mov	r1, r3
 80002d8:	68f8      	ldr	r0, [r7, #12]
 80002da:	f000 f95f 	bl	800059c <FND_Write>
			delay(10);
 80002de:	200a      	movs	r0, #10
 80002e0:	f000 fd7a 	bl	8000dd8 <delay>
			FND_Write(digit_1, DP, 4);
 80002e4:	79fb      	ldrb	r3, [r7, #7]
 80002e6:	2204      	movs	r2, #4
 80002e8:	4619      	mov	r1, r3
 80002ea:	68b8      	ldr	r0, [r7, #8]
 80002ec:	f000 f956 	bl	800059c <FND_Write>
			break;
 80002f0:	e092      	b.n	8000418 <ap_main+0x240>

		case RUN:
			if(count == 9999) {
 80002f2:	69fb      	ldr	r3, [r7, #28]
 80002f4:	f242 720f 	movw	r2, #9999	@ 0x270f
 80002f8:	4293      	cmp	r3, r2
 80002fa:	d102      	bne.n	8000302 <ap_main+0x12a>
				count = 0;
 80002fc:	2300      	movs	r3, #0
 80002fe:	61fb      	str	r3, [r7, #28]
				delay(2);
				FND_Write(digit_10, DP, 3);
				delay(2);
				FND_Write(digit_1, DP, 4);
			}
			break;
 8000300:	e08a      	b.n	8000418 <ap_main+0x240>
				if(Button_GetState(&hBtnSTOP) == ACT_PUSHED){
 8000302:	484b      	ldr	r0, [pc, #300]	@ (8000430 <ap_main+0x258>)
 8000304:	f000 f8d3 	bl	80004ae <Button_GetState>
 8000308:	4603      	mov	r3, r0
 800030a:	2b01      	cmp	r3, #1
 800030c:	d102      	bne.n	8000314 <ap_main+0x13c>
					seg_state = STOP;
 800030e:	2300      	movs	r3, #0
 8000310:	61bb      	str	r3, [r7, #24]
 8000312:	e007      	b.n	8000324 <ap_main+0x14c>
				else if(Button_GetState(&hBtnCLEAR) == ACT_PUSHED){
 8000314:	4842      	ldr	r0, [pc, #264]	@ (8000420 <ap_main+0x248>)
 8000316:	f000 f8ca 	bl	80004ae <Button_GetState>
 800031a:	4603      	mov	r3, r0
 800031c:	2b01      	cmp	r3, #1
 800031e:	d101      	bne.n	8000324 <ap_main+0x14c>
					seg_state = CLEAR;
 8000320:	2302      	movs	r3, #2
 8000322:	61bb      	str	r3, [r7, #24]
				count = count + 1;
 8000324:	69fb      	ldr	r3, [r7, #28]
 8000326:	3301      	adds	r3, #1
 8000328:	61fb      	str	r3, [r7, #28]
				digit_1000 = (count/1000)%10;
 800032a:	69fb      	ldr	r3, [r7, #28]
 800032c:	4a3d      	ldr	r2, [pc, #244]	@ (8000424 <ap_main+0x24c>)
 800032e:	fba2 2303 	umull	r2, r3, r2, r3
 8000332:	099a      	lsrs	r2, r3, #6
 8000334:	4b3c      	ldr	r3, [pc, #240]	@ (8000428 <ap_main+0x250>)
 8000336:	fba3 1302 	umull	r1, r3, r3, r2
 800033a:	08d9      	lsrs	r1, r3, #3
 800033c:	460b      	mov	r3, r1
 800033e:	009b      	lsls	r3, r3, #2
 8000340:	440b      	add	r3, r1
 8000342:	005b      	lsls	r3, r3, #1
 8000344:	1ad3      	subs	r3, r2, r3
 8000346:	617b      	str	r3, [r7, #20]
				digit_100 = (count/100)%10;
 8000348:	69fb      	ldr	r3, [r7, #28]
 800034a:	4a38      	ldr	r2, [pc, #224]	@ (800042c <ap_main+0x254>)
 800034c:	fba2 2303 	umull	r2, r3, r2, r3
 8000350:	095a      	lsrs	r2, r3, #5
 8000352:	4b35      	ldr	r3, [pc, #212]	@ (8000428 <ap_main+0x250>)
 8000354:	fba3 1302 	umull	r1, r3, r3, r2
 8000358:	08d9      	lsrs	r1, r3, #3
 800035a:	460b      	mov	r3, r1
 800035c:	009b      	lsls	r3, r3, #2
 800035e:	440b      	add	r3, r1
 8000360:	005b      	lsls	r3, r3, #1
 8000362:	1ad3      	subs	r3, r2, r3
 8000364:	613b      	str	r3, [r7, #16]
				digit_10 = (count/10)%10;
 8000366:	69fb      	ldr	r3, [r7, #28]
 8000368:	4a2f      	ldr	r2, [pc, #188]	@ (8000428 <ap_main+0x250>)
 800036a:	fba2 2303 	umull	r2, r3, r2, r3
 800036e:	08da      	lsrs	r2, r3, #3
 8000370:	4b2d      	ldr	r3, [pc, #180]	@ (8000428 <ap_main+0x250>)
 8000372:	fba3 1302 	umull	r1, r3, r3, r2
 8000376:	08d9      	lsrs	r1, r3, #3
 8000378:	460b      	mov	r3, r1
 800037a:	009b      	lsls	r3, r3, #2
 800037c:	440b      	add	r3, r1
 800037e:	005b      	lsls	r3, r3, #1
 8000380:	1ad3      	subs	r3, r2, r3
 8000382:	60fb      	str	r3, [r7, #12]
				digit_1 = (count%10);
 8000384:	69fa      	ldr	r2, [r7, #28]
 8000386:	4b28      	ldr	r3, [pc, #160]	@ (8000428 <ap_main+0x250>)
 8000388:	fba3 1302 	umull	r1, r3, r3, r2
 800038c:	08d9      	lsrs	r1, r3, #3
 800038e:	460b      	mov	r3, r1
 8000390:	009b      	lsls	r3, r3, #2
 8000392:	440b      	add	r3, r1
 8000394:	005b      	lsls	r3, r3, #1
 8000396:	1ad3      	subs	r3, r2, r3
 8000398:	60bb      	str	r3, [r7, #8]
				delay(2);
 800039a:	2002      	movs	r0, #2
 800039c:	f000 fd1c 	bl	8000dd8 <delay>
				FND_Write(digit_1000, DP, 1);
 80003a0:	79fb      	ldrb	r3, [r7, #7]
 80003a2:	2201      	movs	r2, #1
 80003a4:	4619      	mov	r1, r3
 80003a6:	6978      	ldr	r0, [r7, #20]
 80003a8:	f000 f8f8 	bl	800059c <FND_Write>
				delay(2);
 80003ac:	2002      	movs	r0, #2
 80003ae:	f000 fd13 	bl	8000dd8 <delay>
				FND_Write(digit_100, DP, 2);
 80003b2:	79fb      	ldrb	r3, [r7, #7]
 80003b4:	2202      	movs	r2, #2
 80003b6:	4619      	mov	r1, r3
 80003b8:	6938      	ldr	r0, [r7, #16]
 80003ba:	f000 f8ef 	bl	800059c <FND_Write>
				delay(2);
 80003be:	2002      	movs	r0, #2
 80003c0:	f000 fd0a 	bl	8000dd8 <delay>
				FND_Write(digit_10, DP, 3);
 80003c4:	79fb      	ldrb	r3, [r7, #7]
 80003c6:	2203      	movs	r2, #3
 80003c8:	4619      	mov	r1, r3
 80003ca:	68f8      	ldr	r0, [r7, #12]
 80003cc:	f000 f8e6 	bl	800059c <FND_Write>
				delay(2);
 80003d0:	2002      	movs	r0, #2
 80003d2:	f000 fd01 	bl	8000dd8 <delay>
				FND_Write(digit_1, DP, 4);
 80003d6:	79fb      	ldrb	r3, [r7, #7]
 80003d8:	2204      	movs	r2, #4
 80003da:	4619      	mov	r1, r3
 80003dc:	68b8      	ldr	r0, [r7, #8]
 80003de:	f000 f8dd 	bl	800059c <FND_Write>
			break;
 80003e2:	e019      	b.n	8000418 <ap_main+0x240>

		case CLEAR:
			count = 0;
 80003e4:	2300      	movs	r3, #0
 80003e6:	61fb      	str	r3, [r7, #28]
			if(Button_GetState(&hBtnSTOP) == ACT_PUSHED){
 80003e8:	4811      	ldr	r0, [pc, #68]	@ (8000430 <ap_main+0x258>)
 80003ea:	f000 f860 	bl	80004ae <Button_GetState>
 80003ee:	4603      	mov	r3, r0
 80003f0:	2b01      	cmp	r3, #1
 80003f2:	d102      	bne.n	80003fa <ap_main+0x222>
				seg_state = STOP;
 80003f4:	2300      	movs	r3, #0
 80003f6:	61bb      	str	r3, [r7, #24]
 80003f8:	e007      	b.n	800040a <ap_main+0x232>
			}
			else if(Button_GetState(&hBtnRUN) == ACT_PUSHED){
 80003fa:	4808      	ldr	r0, [pc, #32]	@ (800041c <ap_main+0x244>)
 80003fc:	f000 f857 	bl	80004ae <Button_GetState>
 8000400:	4603      	mov	r3, r0
 8000402:	2b01      	cmp	r3, #1
 8000404:	d101      	bne.n	800040a <ap_main+0x232>
				seg_state = RUN;
 8000406:	2301      	movs	r3, #1
 8000408:	61bb      	str	r3, [r7, #24]
			}
			FND_Write(0, DP, 5);
 800040a:	79fb      	ldrb	r3, [r7, #7]
 800040c:	2205      	movs	r2, #5
 800040e:	4619      	mov	r1, r3
 8000410:	2000      	movs	r0, #0
 8000412:	f000 f8c3 	bl	800059c <FND_Write>
			break;
 8000416:	bf00      	nop
		switch(seg_state)
 8000418:	e6ef      	b.n	80001fa <ap_main+0x22>
 800041a:	bf00      	nop
 800041c:	20000088 	.word	0x20000088
 8000420:	20000094 	.word	0x20000094
 8000424:	10624dd3 	.word	0x10624dd3
 8000428:	cccccccd 	.word	0xcccccccd
 800042c:	51eb851f 	.word	0x51eb851f
 8000430:	2000007c 	.word	0x2000007c

08000434 <ap_Init>:

	return 0;
}

void ap_Init()
{
 8000434:	b580      	push	{r7, lr}
 8000436:	af00      	add	r7, sp, #0
	SystemClock_Init();
 8000438:	f000 fcb2 	bl	8000da0 <SystemClock_Init>
	FND_Init();
 800043c:	f000 f868 	bl	8000510 <FND_Init>
	Button_Init(&hBtnSTOP, GPIOB, 5);
 8000440:	2205      	movs	r2, #5
 8000442:	4908      	ldr	r1, [pc, #32]	@ (8000464 <ap_Init+0x30>)
 8000444:	4808      	ldr	r0, [pc, #32]	@ (8000468 <ap_Init+0x34>)
 8000446:	f000 f817 	bl	8000478 <Button_Init>
	Button_Init(&hBtnRUN, GPIOB, 3);
 800044a:	2203      	movs	r2, #3
 800044c:	4905      	ldr	r1, [pc, #20]	@ (8000464 <ap_Init+0x30>)
 800044e:	4807      	ldr	r0, [pc, #28]	@ (800046c <ap_Init+0x38>)
 8000450:	f000 f812 	bl	8000478 <Button_Init>
	Button_Init(&hBtnCLEAR, GPIOA, 10);
 8000454:	220a      	movs	r2, #10
 8000456:	4906      	ldr	r1, [pc, #24]	@ (8000470 <ap_Init+0x3c>)
 8000458:	4806      	ldr	r0, [pc, #24]	@ (8000474 <ap_Init+0x40>)
 800045a:	f000 f80d 	bl	8000478 <Button_Init>
}
 800045e:	bf00      	nop
 8000460:	bd80      	pop	{r7, pc}
 8000462:	bf00      	nop
 8000464:	40020400 	.word	0x40020400
 8000468:	2000007c 	.word	0x2000007c
 800046c:	20000088 	.word	0x20000088
 8000470:	40020000 	.word	0x40020000
 8000474:	20000094 	.word	0x20000094

08000478 <Button_Init>:
#include "Button.h"

enum {PUSHED = 0, RELEASED};

void Button_Init(Button_Handler_t *hbtn, GPIO_TypeDef *GPIOx, uint32_t pinNum)
{
 8000478:	b580      	push	{r7, lr}
 800047a:	b084      	sub	sp, #16
 800047c:	af00      	add	r7, sp, #0
 800047e:	60f8      	str	r0, [r7, #12]
 8000480:	60b9      	str	r1, [r7, #8]
 8000482:	607a      	str	r2, [r7, #4]
	hbtn->GPIOx = GPIOx;
 8000484:	68fb      	ldr	r3, [r7, #12]
 8000486:	68ba      	ldr	r2, [r7, #8]
 8000488:	601a      	str	r2, [r3, #0]
	hbtn->pinNum = pinNum;
 800048a:	68fb      	ldr	r3, [r7, #12]
 800048c:	687a      	ldr	r2, [r7, #4]
 800048e:	605a      	str	r2, [r3, #4]
	hbtn->prevState = RELEASED;
 8000490:	68fb      	ldr	r3, [r7, #12]
 8000492:	2201      	movs	r2, #1
 8000494:	609a      	str	r2, [r3, #8]

	GPIO_Init(hbtn->GPIOx, hbtn->pinNum, INPUT);
 8000496:	68fb      	ldr	r3, [r7, #12]
 8000498:	6818      	ldr	r0, [r3, #0]
 800049a:	68fb      	ldr	r3, [r7, #12]
 800049c:	685b      	ldr	r3, [r3, #4]
 800049e:	2201      	movs	r2, #1
 80004a0:	4619      	mov	r1, r3
 80004a2:	f000 fc11 	bl	8000cc8 <GPIO_Init>
}
 80004a6:	bf00      	nop
 80004a8:	3710      	adds	r7, #16
 80004aa:	46bd      	mov	sp, r7
 80004ac:	bd80      	pop	{r7, pc}

080004ae <Button_GetState>:

button_state_t Button_GetState(Button_Handler_t *hbtn)
{
 80004ae:	b580      	push	{r7, lr}
 80004b0:	b084      	sub	sp, #16
 80004b2:	af00      	add	r7, sp, #0
 80004b4:	6078      	str	r0, [r7, #4]
	uint32_t curState;
	curState = GPIO_ReadPin(hbtn->GPIOx, hbtn->pinNum); //pushed = 0
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	681a      	ldr	r2, [r3, #0]
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	685b      	ldr	r3, [r3, #4]
 80004be:	4619      	mov	r1, r3
 80004c0:	4610      	mov	r0, r2
 80004c2:	f000 fc56 	bl	8000d72 <GPIO_ReadPin>
 80004c6:	60f8      	str	r0, [r7, #12]

	if(hbtn->prevState == RELEASED && (curState == PUSHED)){ //1st button pushed
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	689b      	ldr	r3, [r3, #8]
 80004cc:	2b01      	cmp	r3, #1
 80004ce:	d10a      	bne.n	80004e6 <Button_GetState+0x38>
 80004d0:	68fb      	ldr	r3, [r7, #12]
 80004d2:	2b00      	cmp	r3, #0
 80004d4:	d107      	bne.n	80004e6 <Button_GetState+0x38>
		delay(2);  //debounce
 80004d6:	2002      	movs	r0, #2
 80004d8:	f000 fc7e 	bl	8000dd8 <delay>
		hbtn->prevState = PUSHED; //state Update
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	2200      	movs	r2, #0
 80004e0:	609a      	str	r2, [r3, #8]
		return ACT_PUSHED;
 80004e2:	2301      	movs	r3, #1
 80004e4:	e00f      	b.n	8000506 <Button_GetState+0x58>
	}
	else if (hbtn->prevState == PUSHED && (curState == RELEASED)){ //1st button pushed
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	689b      	ldr	r3, [r3, #8]
 80004ea:	2b00      	cmp	r3, #0
 80004ec:	d10a      	bne.n	8000504 <Button_GetState+0x56>
 80004ee:	68fb      	ldr	r3, [r7, #12]
 80004f0:	2b01      	cmp	r3, #1
 80004f2:	d107      	bne.n	8000504 <Button_GetState+0x56>
		delay(2); //debounce
 80004f4:	2002      	movs	r0, #2
 80004f6:	f000 fc6f 	bl	8000dd8 <delay>
		hbtn->prevState = RELEASED; //state Update
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	2201      	movs	r2, #1
 80004fe:	609a      	str	r2, [r3, #8]
		return ACT_RELEASED;
 8000500:	2302      	movs	r3, #2
 8000502:	e000      	b.n	8000506 <Button_GetState+0x58>
	}

	return NO_ACT ;
 8000504:	2300      	movs	r3, #0
}
 8000506:	4618      	mov	r0, r3
 8000508:	3710      	adds	r7, #16
 800050a:	46bd      	mov	sp, r7
 800050c:	bd80      	pop	{r7, pc}
	...

08000510 <FND_Init>:
		{GPIOC, 6},
		{GPIOC, 5},
		{GPIOA, 12}
};

void FND_Init(){
 8000510:	b580      	push	{r7, lr}
 8000512:	af00      	add	r7, sp, #0
	GPIO_Init(GPIOA, 11, OUTPUT);
 8000514:	2200      	movs	r2, #0
 8000516:	210b      	movs	r1, #11
 8000518:	481d      	ldr	r0, [pc, #116]	@ (8000590 <FND_Init+0x80>)
 800051a:	f000 fbd5 	bl	8000cc8 <GPIO_Init>
	GPIO_Init(GPIOB, 12, OUTPUT);
 800051e:	2200      	movs	r2, #0
 8000520:	210c      	movs	r1, #12
 8000522:	481c      	ldr	r0, [pc, #112]	@ (8000594 <FND_Init+0x84>)
 8000524:	f000 fbd0 	bl	8000cc8 <GPIO_Init>
	GPIO_Init(GPIOB, 2, OUTPUT);
 8000528:	2200      	movs	r2, #0
 800052a:	2102      	movs	r1, #2
 800052c:	4819      	ldr	r0, [pc, #100]	@ (8000594 <FND_Init+0x84>)
 800052e:	f000 fbcb 	bl	8000cc8 <GPIO_Init>
	GPIO_Init(GPIOB, 1, OUTPUT);
 8000532:	2200      	movs	r2, #0
 8000534:	2101      	movs	r1, #1
 8000536:	4817      	ldr	r0, [pc, #92]	@ (8000594 <FND_Init+0x84>)
 8000538:	f000 fbc6 	bl	8000cc8 <GPIO_Init>
	GPIO_Init(GPIOB, 15, OUTPUT);
 800053c:	2200      	movs	r2, #0
 800053e:	210f      	movs	r1, #15
 8000540:	4814      	ldr	r0, [pc, #80]	@ (8000594 <FND_Init+0x84>)
 8000542:	f000 fbc1 	bl	8000cc8 <GPIO_Init>
	GPIO_Init(GPIOB, 14, OUTPUT);
 8000546:	2200      	movs	r2, #0
 8000548:	210e      	movs	r1, #14
 800054a:	4812      	ldr	r0, [pc, #72]	@ (8000594 <FND_Init+0x84>)
 800054c:	f000 fbbc 	bl	8000cc8 <GPIO_Init>
	GPIO_Init(GPIOB, 13, OUTPUT);
 8000550:	2200      	movs	r2, #0
 8000552:	210d      	movs	r1, #13
 8000554:	480f      	ldr	r0, [pc, #60]	@ (8000594 <FND_Init+0x84>)
 8000556:	f000 fbb7 	bl	8000cc8 <GPIO_Init>
	GPIO_Init(GPIOC, 4, OUTPUT);
 800055a:	2200      	movs	r2, #0
 800055c:	2104      	movs	r1, #4
 800055e:	480e      	ldr	r0, [pc, #56]	@ (8000598 <FND_Init+0x88>)
 8000560:	f000 fbb2 	bl	8000cc8 <GPIO_Init>
	GPIO_Init(GPIOC, 8, OUTPUT);
 8000564:	2200      	movs	r2, #0
 8000566:	2108      	movs	r1, #8
 8000568:	480b      	ldr	r0, [pc, #44]	@ (8000598 <FND_Init+0x88>)
 800056a:	f000 fbad 	bl	8000cc8 <GPIO_Init>
	GPIO_Init(GPIOC, 6, OUTPUT);
 800056e:	2200      	movs	r2, #0
 8000570:	2106      	movs	r1, #6
 8000572:	4809      	ldr	r0, [pc, #36]	@ (8000598 <FND_Init+0x88>)
 8000574:	f000 fba8 	bl	8000cc8 <GPIO_Init>
	GPIO_Init(GPIOC, 5, OUTPUT);
 8000578:	2200      	movs	r2, #0
 800057a:	2105      	movs	r1, #5
 800057c:	4806      	ldr	r0, [pc, #24]	@ (8000598 <FND_Init+0x88>)
 800057e:	f000 fba3 	bl	8000cc8 <GPIO_Init>
	GPIO_Init(GPIOA, 12, OUTPUT);
 8000582:	2200      	movs	r2, #0
 8000584:	210c      	movs	r1, #12
 8000586:	4802      	ldr	r0, [pc, #8]	@ (8000590 <FND_Init+0x80>)
 8000588:	f000 fb9e 	bl	8000cc8 <GPIO_Init>

}
 800058c:	bf00      	nop
 800058e:	bd80      	pop	{r7, pc}
 8000590:	40020000 	.word	0x40020000
 8000594:	40020400 	.word	0x40020400
 8000598:	40020800 	.word	0x40020800

0800059c <FND_Write>:

void FND_Write(uint32_t data, uint8_t DOT, uint8_t sel)
{
 800059c:	b580      	push	{r7, lr}
 800059e:	b082      	sub	sp, #8
 80005a0:	af00      	add	r7, sp, #0
 80005a2:	6078      	str	r0, [r7, #4]
 80005a4:	460b      	mov	r3, r1
 80005a6:	70fb      	strb	r3, [r7, #3]
 80005a8:	4613      	mov	r3, r2
 80005aa:	70bb      	strb	r3, [r7, #2]
	switch(sel){
 80005ac:	78bb      	ldrb	r3, [r7, #2]
 80005ae:	2b05      	cmp	r3, #5
 80005b0:	f200 80d6 	bhi.w	8000760 <FND_Write+0x1c4>
 80005b4:	a201      	add	r2, pc, #4	@ (adr r2, 80005bc <FND_Write+0x20>)
 80005b6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80005ba:	bf00      	nop
 80005bc:	080005d5 	.word	0x080005d5
 80005c0:	08000617 	.word	0x08000617
 80005c4:	08000659 	.word	0x08000659
 80005c8:	0800069b 	.word	0x0800069b
 80005cc:	080006dd 	.word	0x080006dd
 80005d0:	0800071f 	.word	0x0800071f
	case 0:
		GPIO_WritePin(seg_sel[0].GPIOx, seg_sel[0].pinNum, PIN_SET);
 80005d4:	4b91      	ldr	r3, [pc, #580]	@ (800081c <FND_Write+0x280>)
 80005d6:	681b      	ldr	r3, [r3, #0]
 80005d8:	4a90      	ldr	r2, [pc, #576]	@ (800081c <FND_Write+0x280>)
 80005da:	6851      	ldr	r1, [r2, #4]
 80005dc:	2201      	movs	r2, #1
 80005de:	4618      	mov	r0, r3
 80005e0:	f000 fba3 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg_sel[1].GPIOx, seg_sel[1].pinNum, PIN_SET);
 80005e4:	4b8d      	ldr	r3, [pc, #564]	@ (800081c <FND_Write+0x280>)
 80005e6:	689b      	ldr	r3, [r3, #8]
 80005e8:	4a8c      	ldr	r2, [pc, #560]	@ (800081c <FND_Write+0x280>)
 80005ea:	68d1      	ldr	r1, [r2, #12]
 80005ec:	2201      	movs	r2, #1
 80005ee:	4618      	mov	r0, r3
 80005f0:	f000 fb9b 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg_sel[2].GPIOx, seg_sel[2].pinNum, PIN_SET);
 80005f4:	4b89      	ldr	r3, [pc, #548]	@ (800081c <FND_Write+0x280>)
 80005f6:	691b      	ldr	r3, [r3, #16]
 80005f8:	4a88      	ldr	r2, [pc, #544]	@ (800081c <FND_Write+0x280>)
 80005fa:	6951      	ldr	r1, [r2, #20]
 80005fc:	2201      	movs	r2, #1
 80005fe:	4618      	mov	r0, r3
 8000600:	f000 fb93 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg_sel[3].GPIOx, seg_sel[3].pinNum, PIN_SET);
 8000604:	4b85      	ldr	r3, [pc, #532]	@ (800081c <FND_Write+0x280>)
 8000606:	699b      	ldr	r3, [r3, #24]
 8000608:	4a84      	ldr	r2, [pc, #528]	@ (800081c <FND_Write+0x280>)
 800060a:	69d1      	ldr	r1, [r2, #28]
 800060c:	2201      	movs	r2, #1
 800060e:	4618      	mov	r0, r3
 8000610:	f000 fb8b 	bl	8000d2a <GPIO_WritePin>
		break;
 8000614:	e0a4      	b.n	8000760 <FND_Write+0x1c4>
	case 1:
		GPIO_WritePin(seg_sel[0].GPIOx, seg_sel[0].pinNum, PIN_RESET);
 8000616:	4b81      	ldr	r3, [pc, #516]	@ (800081c <FND_Write+0x280>)
 8000618:	681b      	ldr	r3, [r3, #0]
 800061a:	4a80      	ldr	r2, [pc, #512]	@ (800081c <FND_Write+0x280>)
 800061c:	6851      	ldr	r1, [r2, #4]
 800061e:	2200      	movs	r2, #0
 8000620:	4618      	mov	r0, r3
 8000622:	f000 fb82 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg_sel[1].GPIOx, seg_sel[1].pinNum, PIN_SET);
 8000626:	4b7d      	ldr	r3, [pc, #500]	@ (800081c <FND_Write+0x280>)
 8000628:	689b      	ldr	r3, [r3, #8]
 800062a:	4a7c      	ldr	r2, [pc, #496]	@ (800081c <FND_Write+0x280>)
 800062c:	68d1      	ldr	r1, [r2, #12]
 800062e:	2201      	movs	r2, #1
 8000630:	4618      	mov	r0, r3
 8000632:	f000 fb7a 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg_sel[2].GPIOx, seg_sel[2].pinNum, PIN_SET);
 8000636:	4b79      	ldr	r3, [pc, #484]	@ (800081c <FND_Write+0x280>)
 8000638:	691b      	ldr	r3, [r3, #16]
 800063a:	4a78      	ldr	r2, [pc, #480]	@ (800081c <FND_Write+0x280>)
 800063c:	6951      	ldr	r1, [r2, #20]
 800063e:	2201      	movs	r2, #1
 8000640:	4618      	mov	r0, r3
 8000642:	f000 fb72 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg_sel[3].GPIOx, seg_sel[3].pinNum, PIN_SET);
 8000646:	4b75      	ldr	r3, [pc, #468]	@ (800081c <FND_Write+0x280>)
 8000648:	699b      	ldr	r3, [r3, #24]
 800064a:	4a74      	ldr	r2, [pc, #464]	@ (800081c <FND_Write+0x280>)
 800064c:	69d1      	ldr	r1, [r2, #28]
 800064e:	2201      	movs	r2, #1
 8000650:	4618      	mov	r0, r3
 8000652:	f000 fb6a 	bl	8000d2a <GPIO_WritePin>
		break;
 8000656:	e083      	b.n	8000760 <FND_Write+0x1c4>
	case 2:
		GPIO_WritePin(seg_sel[0].GPIOx, seg_sel[0].pinNum, PIN_SET);
 8000658:	4b70      	ldr	r3, [pc, #448]	@ (800081c <FND_Write+0x280>)
 800065a:	681b      	ldr	r3, [r3, #0]
 800065c:	4a6f      	ldr	r2, [pc, #444]	@ (800081c <FND_Write+0x280>)
 800065e:	6851      	ldr	r1, [r2, #4]
 8000660:	2201      	movs	r2, #1
 8000662:	4618      	mov	r0, r3
 8000664:	f000 fb61 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg_sel[1].GPIOx, seg_sel[1].pinNum, PIN_RESET);
 8000668:	4b6c      	ldr	r3, [pc, #432]	@ (800081c <FND_Write+0x280>)
 800066a:	689b      	ldr	r3, [r3, #8]
 800066c:	4a6b      	ldr	r2, [pc, #428]	@ (800081c <FND_Write+0x280>)
 800066e:	68d1      	ldr	r1, [r2, #12]
 8000670:	2200      	movs	r2, #0
 8000672:	4618      	mov	r0, r3
 8000674:	f000 fb59 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg_sel[2].GPIOx, seg_sel[2].pinNum, PIN_SET);
 8000678:	4b68      	ldr	r3, [pc, #416]	@ (800081c <FND_Write+0x280>)
 800067a:	691b      	ldr	r3, [r3, #16]
 800067c:	4a67      	ldr	r2, [pc, #412]	@ (800081c <FND_Write+0x280>)
 800067e:	6951      	ldr	r1, [r2, #20]
 8000680:	2201      	movs	r2, #1
 8000682:	4618      	mov	r0, r3
 8000684:	f000 fb51 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg_sel[3].GPIOx, seg_sel[3].pinNum, PIN_SET);
 8000688:	4b64      	ldr	r3, [pc, #400]	@ (800081c <FND_Write+0x280>)
 800068a:	699b      	ldr	r3, [r3, #24]
 800068c:	4a63      	ldr	r2, [pc, #396]	@ (800081c <FND_Write+0x280>)
 800068e:	69d1      	ldr	r1, [r2, #28]
 8000690:	2201      	movs	r2, #1
 8000692:	4618      	mov	r0, r3
 8000694:	f000 fb49 	bl	8000d2a <GPIO_WritePin>
		break;
 8000698:	e062      	b.n	8000760 <FND_Write+0x1c4>
	case 3:
		GPIO_WritePin(seg_sel[0].GPIOx, seg_sel[0].pinNum, PIN_SET);
 800069a:	4b60      	ldr	r3, [pc, #384]	@ (800081c <FND_Write+0x280>)
 800069c:	681b      	ldr	r3, [r3, #0]
 800069e:	4a5f      	ldr	r2, [pc, #380]	@ (800081c <FND_Write+0x280>)
 80006a0:	6851      	ldr	r1, [r2, #4]
 80006a2:	2201      	movs	r2, #1
 80006a4:	4618      	mov	r0, r3
 80006a6:	f000 fb40 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg_sel[1].GPIOx, seg_sel[1].pinNum, PIN_SET);
 80006aa:	4b5c      	ldr	r3, [pc, #368]	@ (800081c <FND_Write+0x280>)
 80006ac:	689b      	ldr	r3, [r3, #8]
 80006ae:	4a5b      	ldr	r2, [pc, #364]	@ (800081c <FND_Write+0x280>)
 80006b0:	68d1      	ldr	r1, [r2, #12]
 80006b2:	2201      	movs	r2, #1
 80006b4:	4618      	mov	r0, r3
 80006b6:	f000 fb38 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg_sel[2].GPIOx, seg_sel[2].pinNum, PIN_RESET);
 80006ba:	4b58      	ldr	r3, [pc, #352]	@ (800081c <FND_Write+0x280>)
 80006bc:	691b      	ldr	r3, [r3, #16]
 80006be:	4a57      	ldr	r2, [pc, #348]	@ (800081c <FND_Write+0x280>)
 80006c0:	6951      	ldr	r1, [r2, #20]
 80006c2:	2200      	movs	r2, #0
 80006c4:	4618      	mov	r0, r3
 80006c6:	f000 fb30 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg_sel[3].GPIOx, seg_sel[3].pinNum, PIN_SET);
 80006ca:	4b54      	ldr	r3, [pc, #336]	@ (800081c <FND_Write+0x280>)
 80006cc:	699b      	ldr	r3, [r3, #24]
 80006ce:	4a53      	ldr	r2, [pc, #332]	@ (800081c <FND_Write+0x280>)
 80006d0:	69d1      	ldr	r1, [r2, #28]
 80006d2:	2201      	movs	r2, #1
 80006d4:	4618      	mov	r0, r3
 80006d6:	f000 fb28 	bl	8000d2a <GPIO_WritePin>
		break;
 80006da:	e041      	b.n	8000760 <FND_Write+0x1c4>
	case 4:
		GPIO_WritePin(seg_sel[0].GPIOx, seg_sel[0].pinNum, PIN_SET);
 80006dc:	4b4f      	ldr	r3, [pc, #316]	@ (800081c <FND_Write+0x280>)
 80006de:	681b      	ldr	r3, [r3, #0]
 80006e0:	4a4e      	ldr	r2, [pc, #312]	@ (800081c <FND_Write+0x280>)
 80006e2:	6851      	ldr	r1, [r2, #4]
 80006e4:	2201      	movs	r2, #1
 80006e6:	4618      	mov	r0, r3
 80006e8:	f000 fb1f 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg_sel[1].GPIOx, seg_sel[1].pinNum, PIN_SET);
 80006ec:	4b4b      	ldr	r3, [pc, #300]	@ (800081c <FND_Write+0x280>)
 80006ee:	689b      	ldr	r3, [r3, #8]
 80006f0:	4a4a      	ldr	r2, [pc, #296]	@ (800081c <FND_Write+0x280>)
 80006f2:	68d1      	ldr	r1, [r2, #12]
 80006f4:	2201      	movs	r2, #1
 80006f6:	4618      	mov	r0, r3
 80006f8:	f000 fb17 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg_sel[2].GPIOx, seg_sel[2].pinNum, PIN_SET);
 80006fc:	4b47      	ldr	r3, [pc, #284]	@ (800081c <FND_Write+0x280>)
 80006fe:	691b      	ldr	r3, [r3, #16]
 8000700:	4a46      	ldr	r2, [pc, #280]	@ (800081c <FND_Write+0x280>)
 8000702:	6951      	ldr	r1, [r2, #20]
 8000704:	2201      	movs	r2, #1
 8000706:	4618      	mov	r0, r3
 8000708:	f000 fb0f 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg_sel[3].GPIOx, seg_sel[3].pinNum, PIN_RESET);
 800070c:	4b43      	ldr	r3, [pc, #268]	@ (800081c <FND_Write+0x280>)
 800070e:	699b      	ldr	r3, [r3, #24]
 8000710:	4a42      	ldr	r2, [pc, #264]	@ (800081c <FND_Write+0x280>)
 8000712:	69d1      	ldr	r1, [r2, #28]
 8000714:	2200      	movs	r2, #0
 8000716:	4618      	mov	r0, r3
 8000718:	f000 fb07 	bl	8000d2a <GPIO_WritePin>
		break;
 800071c:	e020      	b.n	8000760 <FND_Write+0x1c4>
	case 5:
		GPIO_WritePin(seg_sel[0].GPIOx, seg_sel[0].pinNum, PIN_RESET);
 800071e:	4b3f      	ldr	r3, [pc, #252]	@ (800081c <FND_Write+0x280>)
 8000720:	681b      	ldr	r3, [r3, #0]
 8000722:	4a3e      	ldr	r2, [pc, #248]	@ (800081c <FND_Write+0x280>)
 8000724:	6851      	ldr	r1, [r2, #4]
 8000726:	2200      	movs	r2, #0
 8000728:	4618      	mov	r0, r3
 800072a:	f000 fafe 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg_sel[1].GPIOx, seg_sel[1].pinNum, PIN_RESET);
 800072e:	4b3b      	ldr	r3, [pc, #236]	@ (800081c <FND_Write+0x280>)
 8000730:	689b      	ldr	r3, [r3, #8]
 8000732:	4a3a      	ldr	r2, [pc, #232]	@ (800081c <FND_Write+0x280>)
 8000734:	68d1      	ldr	r1, [r2, #12]
 8000736:	2200      	movs	r2, #0
 8000738:	4618      	mov	r0, r3
 800073a:	f000 faf6 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg_sel[2].GPIOx, seg_sel[2].pinNum, PIN_RESET);
 800073e:	4b37      	ldr	r3, [pc, #220]	@ (800081c <FND_Write+0x280>)
 8000740:	691b      	ldr	r3, [r3, #16]
 8000742:	4a36      	ldr	r2, [pc, #216]	@ (800081c <FND_Write+0x280>)
 8000744:	6951      	ldr	r1, [r2, #20]
 8000746:	2200      	movs	r2, #0
 8000748:	4618      	mov	r0, r3
 800074a:	f000 faee 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg_sel[3].GPIOx, seg_sel[3].pinNum, PIN_RESET);
 800074e:	4b33      	ldr	r3, [pc, #204]	@ (800081c <FND_Write+0x280>)
 8000750:	699b      	ldr	r3, [r3, #24]
 8000752:	4a32      	ldr	r2, [pc, #200]	@ (800081c <FND_Write+0x280>)
 8000754:	69d1      	ldr	r1, [r2, #28]
 8000756:	2200      	movs	r2, #0
 8000758:	4618      	mov	r0, r3
 800075a:	f000 fae6 	bl	8000d2a <GPIO_WritePin>
		break;
 800075e:	bf00      	nop
	}
	switch(data){
 8000760:	687b      	ldr	r3, [r7, #4]
 8000762:	2b09      	cmp	r3, #9
 8000764:	f200 82aa 	bhi.w	8000cbc <FND_Write+0x720>
 8000768:	a201      	add	r2, pc, #4	@ (adr r2, 8000770 <FND_Write+0x1d4>)
 800076a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800076e:	bf00      	nop
 8000770:	08000799 	.word	0x08000799
 8000774:	08000825 	.word	0x08000825
 8000778:	080008a7 	.word	0x080008a7
 800077c:	08000929 	.word	0x08000929
 8000780:	080009ab 	.word	0x080009ab
 8000784:	08000a2d 	.word	0x08000a2d
 8000788:	08000ab5 	.word	0x08000ab5
 800078c:	08000b37 	.word	0x08000b37
 8000790:	08000bb9 	.word	0x08000bb9
 8000794:	08000c3b 	.word	0x08000c3b
	case 0:
		GPIO_WritePin(seg[0].GPIOx, seg[0].pinNum, PIN_SET);
 8000798:	4b21      	ldr	r3, [pc, #132]	@ (8000820 <FND_Write+0x284>)
 800079a:	681b      	ldr	r3, [r3, #0]
 800079c:	4a20      	ldr	r2, [pc, #128]	@ (8000820 <FND_Write+0x284>)
 800079e:	6851      	ldr	r1, [r2, #4]
 80007a0:	2201      	movs	r2, #1
 80007a2:	4618      	mov	r0, r3
 80007a4:	f000 fac1 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[1].GPIOx, seg[1].pinNum, PIN_SET);
 80007a8:	4b1d      	ldr	r3, [pc, #116]	@ (8000820 <FND_Write+0x284>)
 80007aa:	689b      	ldr	r3, [r3, #8]
 80007ac:	4a1c      	ldr	r2, [pc, #112]	@ (8000820 <FND_Write+0x284>)
 80007ae:	68d1      	ldr	r1, [r2, #12]
 80007b0:	2201      	movs	r2, #1
 80007b2:	4618      	mov	r0, r3
 80007b4:	f000 fab9 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[2].GPIOx, seg[2].pinNum, PIN_SET);
 80007b8:	4b19      	ldr	r3, [pc, #100]	@ (8000820 <FND_Write+0x284>)
 80007ba:	691b      	ldr	r3, [r3, #16]
 80007bc:	4a18      	ldr	r2, [pc, #96]	@ (8000820 <FND_Write+0x284>)
 80007be:	6951      	ldr	r1, [r2, #20]
 80007c0:	2201      	movs	r2, #1
 80007c2:	4618      	mov	r0, r3
 80007c4:	f000 fab1 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[3].GPIOx, seg[3].pinNum, PIN_SET);
 80007c8:	4b15      	ldr	r3, [pc, #84]	@ (8000820 <FND_Write+0x284>)
 80007ca:	699b      	ldr	r3, [r3, #24]
 80007cc:	4a14      	ldr	r2, [pc, #80]	@ (8000820 <FND_Write+0x284>)
 80007ce:	69d1      	ldr	r1, [r2, #28]
 80007d0:	2201      	movs	r2, #1
 80007d2:	4618      	mov	r0, r3
 80007d4:	f000 faa9 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[4].GPIOx, seg[4].pinNum, PIN_SET);
 80007d8:	4b11      	ldr	r3, [pc, #68]	@ (8000820 <FND_Write+0x284>)
 80007da:	6a1b      	ldr	r3, [r3, #32]
 80007dc:	4a10      	ldr	r2, [pc, #64]	@ (8000820 <FND_Write+0x284>)
 80007de:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 80007e0:	2201      	movs	r2, #1
 80007e2:	4618      	mov	r0, r3
 80007e4:	f000 faa1 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[5].GPIOx, seg[5].pinNum, PIN_SET);
 80007e8:	4b0d      	ldr	r3, [pc, #52]	@ (8000820 <FND_Write+0x284>)
 80007ea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80007ec:	4a0c      	ldr	r2, [pc, #48]	@ (8000820 <FND_Write+0x284>)
 80007ee:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 80007f0:	2201      	movs	r2, #1
 80007f2:	4618      	mov	r0, r3
 80007f4:	f000 fa99 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[6].GPIOx, seg[6].pinNum, PIN_RESET);
 80007f8:	4b09      	ldr	r3, [pc, #36]	@ (8000820 <FND_Write+0x284>)
 80007fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80007fc:	4a08      	ldr	r2, [pc, #32]	@ (8000820 <FND_Write+0x284>)
 80007fe:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8000800:	2200      	movs	r2, #0
 8000802:	4618      	mov	r0, r3
 8000804:	f000 fa91 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[7].GPIOx, seg[7].pinNum, DOT);
 8000808:	4b05      	ldr	r3, [pc, #20]	@ (8000820 <FND_Write+0x284>)
 800080a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800080c:	4a04      	ldr	r2, [pc, #16]	@ (8000820 <FND_Write+0x284>)
 800080e:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 8000810:	78fa      	ldrb	r2, [r7, #3]
 8000812:	4618      	mov	r0, r3
 8000814:	f000 fa89 	bl	8000d2a <GPIO_WritePin>
		break;
 8000818:	e250      	b.n	8000cbc <FND_Write+0x720>
 800081a:	bf00      	nop
 800081c:	20000040 	.word	0x20000040
 8000820:	20000000 	.word	0x20000000
	case 1:
		GPIO_WritePin(seg[0].GPIOx, seg[0].pinNum, PIN_RESET);
 8000824:	4ba2      	ldr	r3, [pc, #648]	@ (8000ab0 <FND_Write+0x514>)
 8000826:	681b      	ldr	r3, [r3, #0]
 8000828:	4aa1      	ldr	r2, [pc, #644]	@ (8000ab0 <FND_Write+0x514>)
 800082a:	6851      	ldr	r1, [r2, #4]
 800082c:	2200      	movs	r2, #0
 800082e:	4618      	mov	r0, r3
 8000830:	f000 fa7b 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[1].GPIOx, seg[1].pinNum, PIN_SET);
 8000834:	4b9e      	ldr	r3, [pc, #632]	@ (8000ab0 <FND_Write+0x514>)
 8000836:	689b      	ldr	r3, [r3, #8]
 8000838:	4a9d      	ldr	r2, [pc, #628]	@ (8000ab0 <FND_Write+0x514>)
 800083a:	68d1      	ldr	r1, [r2, #12]
 800083c:	2201      	movs	r2, #1
 800083e:	4618      	mov	r0, r3
 8000840:	f000 fa73 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[2].GPIOx, seg[2].pinNum, PIN_SET);
 8000844:	4b9a      	ldr	r3, [pc, #616]	@ (8000ab0 <FND_Write+0x514>)
 8000846:	691b      	ldr	r3, [r3, #16]
 8000848:	4a99      	ldr	r2, [pc, #612]	@ (8000ab0 <FND_Write+0x514>)
 800084a:	6951      	ldr	r1, [r2, #20]
 800084c:	2201      	movs	r2, #1
 800084e:	4618      	mov	r0, r3
 8000850:	f000 fa6b 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[3].GPIOx, seg[3].pinNum, PIN_RESET);
 8000854:	4b96      	ldr	r3, [pc, #600]	@ (8000ab0 <FND_Write+0x514>)
 8000856:	699b      	ldr	r3, [r3, #24]
 8000858:	4a95      	ldr	r2, [pc, #596]	@ (8000ab0 <FND_Write+0x514>)
 800085a:	69d1      	ldr	r1, [r2, #28]
 800085c:	2200      	movs	r2, #0
 800085e:	4618      	mov	r0, r3
 8000860:	f000 fa63 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[4].GPIOx, seg[4].pinNum, PIN_RESET);
 8000864:	4b92      	ldr	r3, [pc, #584]	@ (8000ab0 <FND_Write+0x514>)
 8000866:	6a1b      	ldr	r3, [r3, #32]
 8000868:	4a91      	ldr	r2, [pc, #580]	@ (8000ab0 <FND_Write+0x514>)
 800086a:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 800086c:	2200      	movs	r2, #0
 800086e:	4618      	mov	r0, r3
 8000870:	f000 fa5b 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[5].GPIOx, seg[5].pinNum, PIN_RESET);
 8000874:	4b8e      	ldr	r3, [pc, #568]	@ (8000ab0 <FND_Write+0x514>)
 8000876:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000878:	4a8d      	ldr	r2, [pc, #564]	@ (8000ab0 <FND_Write+0x514>)
 800087a:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 800087c:	2200      	movs	r2, #0
 800087e:	4618      	mov	r0, r3
 8000880:	f000 fa53 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[6].GPIOx, seg[6].pinNum, PIN_RESET);
 8000884:	4b8a      	ldr	r3, [pc, #552]	@ (8000ab0 <FND_Write+0x514>)
 8000886:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000888:	4a89      	ldr	r2, [pc, #548]	@ (8000ab0 <FND_Write+0x514>)
 800088a:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 800088c:	2200      	movs	r2, #0
 800088e:	4618      	mov	r0, r3
 8000890:	f000 fa4b 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[7].GPIOx, seg[7].pinNum, DOT);
 8000894:	4b86      	ldr	r3, [pc, #536]	@ (8000ab0 <FND_Write+0x514>)
 8000896:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8000898:	4a85      	ldr	r2, [pc, #532]	@ (8000ab0 <FND_Write+0x514>)
 800089a:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 800089c:	78fa      	ldrb	r2, [r7, #3]
 800089e:	4618      	mov	r0, r3
 80008a0:	f000 fa43 	bl	8000d2a <GPIO_WritePin>
		break;
 80008a4:	e20a      	b.n	8000cbc <FND_Write+0x720>
	case 2:
		GPIO_WritePin(seg[0].GPIOx, seg[0].pinNum, PIN_SET);
 80008a6:	4b82      	ldr	r3, [pc, #520]	@ (8000ab0 <FND_Write+0x514>)
 80008a8:	681b      	ldr	r3, [r3, #0]
 80008aa:	4a81      	ldr	r2, [pc, #516]	@ (8000ab0 <FND_Write+0x514>)
 80008ac:	6851      	ldr	r1, [r2, #4]
 80008ae:	2201      	movs	r2, #1
 80008b0:	4618      	mov	r0, r3
 80008b2:	f000 fa3a 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[1].GPIOx, seg[1].pinNum, PIN_SET);
 80008b6:	4b7e      	ldr	r3, [pc, #504]	@ (8000ab0 <FND_Write+0x514>)
 80008b8:	689b      	ldr	r3, [r3, #8]
 80008ba:	4a7d      	ldr	r2, [pc, #500]	@ (8000ab0 <FND_Write+0x514>)
 80008bc:	68d1      	ldr	r1, [r2, #12]
 80008be:	2201      	movs	r2, #1
 80008c0:	4618      	mov	r0, r3
 80008c2:	f000 fa32 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[2].GPIOx, seg[2].pinNum, PIN_RESET);
 80008c6:	4b7a      	ldr	r3, [pc, #488]	@ (8000ab0 <FND_Write+0x514>)
 80008c8:	691b      	ldr	r3, [r3, #16]
 80008ca:	4a79      	ldr	r2, [pc, #484]	@ (8000ab0 <FND_Write+0x514>)
 80008cc:	6951      	ldr	r1, [r2, #20]
 80008ce:	2200      	movs	r2, #0
 80008d0:	4618      	mov	r0, r3
 80008d2:	f000 fa2a 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[3].GPIOx, seg[3].pinNum, PIN_SET);
 80008d6:	4b76      	ldr	r3, [pc, #472]	@ (8000ab0 <FND_Write+0x514>)
 80008d8:	699b      	ldr	r3, [r3, #24]
 80008da:	4a75      	ldr	r2, [pc, #468]	@ (8000ab0 <FND_Write+0x514>)
 80008dc:	69d1      	ldr	r1, [r2, #28]
 80008de:	2201      	movs	r2, #1
 80008e0:	4618      	mov	r0, r3
 80008e2:	f000 fa22 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[4].GPIOx, seg[4].pinNum, PIN_SET);
 80008e6:	4b72      	ldr	r3, [pc, #456]	@ (8000ab0 <FND_Write+0x514>)
 80008e8:	6a1b      	ldr	r3, [r3, #32]
 80008ea:	4a71      	ldr	r2, [pc, #452]	@ (8000ab0 <FND_Write+0x514>)
 80008ec:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 80008ee:	2201      	movs	r2, #1
 80008f0:	4618      	mov	r0, r3
 80008f2:	f000 fa1a 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[5].GPIOx, seg[5].pinNum, PIN_RESET);
 80008f6:	4b6e      	ldr	r3, [pc, #440]	@ (8000ab0 <FND_Write+0x514>)
 80008f8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80008fa:	4a6d      	ldr	r2, [pc, #436]	@ (8000ab0 <FND_Write+0x514>)
 80008fc:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 80008fe:	2200      	movs	r2, #0
 8000900:	4618      	mov	r0, r3
 8000902:	f000 fa12 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[6].GPIOx, seg[6].pinNum, PIN_SET);
 8000906:	4b6a      	ldr	r3, [pc, #424]	@ (8000ab0 <FND_Write+0x514>)
 8000908:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800090a:	4a69      	ldr	r2, [pc, #420]	@ (8000ab0 <FND_Write+0x514>)
 800090c:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 800090e:	2201      	movs	r2, #1
 8000910:	4618      	mov	r0, r3
 8000912:	f000 fa0a 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[7].GPIOx, seg[7].pinNum, DOT);
 8000916:	4b66      	ldr	r3, [pc, #408]	@ (8000ab0 <FND_Write+0x514>)
 8000918:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800091a:	4a65      	ldr	r2, [pc, #404]	@ (8000ab0 <FND_Write+0x514>)
 800091c:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 800091e:	78fa      	ldrb	r2, [r7, #3]
 8000920:	4618      	mov	r0, r3
 8000922:	f000 fa02 	bl	8000d2a <GPIO_WritePin>
		break;
 8000926:	e1c9      	b.n	8000cbc <FND_Write+0x720>
	case 3:
		GPIO_WritePin(seg[0].GPIOx, seg[0].pinNum, PIN_SET);
 8000928:	4b61      	ldr	r3, [pc, #388]	@ (8000ab0 <FND_Write+0x514>)
 800092a:	681b      	ldr	r3, [r3, #0]
 800092c:	4a60      	ldr	r2, [pc, #384]	@ (8000ab0 <FND_Write+0x514>)
 800092e:	6851      	ldr	r1, [r2, #4]
 8000930:	2201      	movs	r2, #1
 8000932:	4618      	mov	r0, r3
 8000934:	f000 f9f9 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[1].GPIOx, seg[1].pinNum, PIN_SET);
 8000938:	4b5d      	ldr	r3, [pc, #372]	@ (8000ab0 <FND_Write+0x514>)
 800093a:	689b      	ldr	r3, [r3, #8]
 800093c:	4a5c      	ldr	r2, [pc, #368]	@ (8000ab0 <FND_Write+0x514>)
 800093e:	68d1      	ldr	r1, [r2, #12]
 8000940:	2201      	movs	r2, #1
 8000942:	4618      	mov	r0, r3
 8000944:	f000 f9f1 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[2].GPIOx, seg[2].pinNum, PIN_SET);
 8000948:	4b59      	ldr	r3, [pc, #356]	@ (8000ab0 <FND_Write+0x514>)
 800094a:	691b      	ldr	r3, [r3, #16]
 800094c:	4a58      	ldr	r2, [pc, #352]	@ (8000ab0 <FND_Write+0x514>)
 800094e:	6951      	ldr	r1, [r2, #20]
 8000950:	2201      	movs	r2, #1
 8000952:	4618      	mov	r0, r3
 8000954:	f000 f9e9 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[3].GPIOx, seg[3].pinNum, PIN_SET);
 8000958:	4b55      	ldr	r3, [pc, #340]	@ (8000ab0 <FND_Write+0x514>)
 800095a:	699b      	ldr	r3, [r3, #24]
 800095c:	4a54      	ldr	r2, [pc, #336]	@ (8000ab0 <FND_Write+0x514>)
 800095e:	69d1      	ldr	r1, [r2, #28]
 8000960:	2201      	movs	r2, #1
 8000962:	4618      	mov	r0, r3
 8000964:	f000 f9e1 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[4].GPIOx, seg[4].pinNum, PIN_RESET);
 8000968:	4b51      	ldr	r3, [pc, #324]	@ (8000ab0 <FND_Write+0x514>)
 800096a:	6a1b      	ldr	r3, [r3, #32]
 800096c:	4a50      	ldr	r2, [pc, #320]	@ (8000ab0 <FND_Write+0x514>)
 800096e:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8000970:	2200      	movs	r2, #0
 8000972:	4618      	mov	r0, r3
 8000974:	f000 f9d9 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[5].GPIOx, seg[5].pinNum, PIN_RESET);
 8000978:	4b4d      	ldr	r3, [pc, #308]	@ (8000ab0 <FND_Write+0x514>)
 800097a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800097c:	4a4c      	ldr	r2, [pc, #304]	@ (8000ab0 <FND_Write+0x514>)
 800097e:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8000980:	2200      	movs	r2, #0
 8000982:	4618      	mov	r0, r3
 8000984:	f000 f9d1 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[6].GPIOx, seg[6].pinNum, PIN_SET);
 8000988:	4b49      	ldr	r3, [pc, #292]	@ (8000ab0 <FND_Write+0x514>)
 800098a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800098c:	4a48      	ldr	r2, [pc, #288]	@ (8000ab0 <FND_Write+0x514>)
 800098e:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8000990:	2201      	movs	r2, #1
 8000992:	4618      	mov	r0, r3
 8000994:	f000 f9c9 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[7].GPIOx, seg[7].pinNum, DOT);
 8000998:	4b45      	ldr	r3, [pc, #276]	@ (8000ab0 <FND_Write+0x514>)
 800099a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800099c:	4a44      	ldr	r2, [pc, #272]	@ (8000ab0 <FND_Write+0x514>)
 800099e:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 80009a0:	78fa      	ldrb	r2, [r7, #3]
 80009a2:	4618      	mov	r0, r3
 80009a4:	f000 f9c1 	bl	8000d2a <GPIO_WritePin>
		break;
 80009a8:	e188      	b.n	8000cbc <FND_Write+0x720>
	case 4:
		GPIO_WritePin(seg[0].GPIOx, seg[0].pinNum, PIN_RESET);
 80009aa:	4b41      	ldr	r3, [pc, #260]	@ (8000ab0 <FND_Write+0x514>)
 80009ac:	681b      	ldr	r3, [r3, #0]
 80009ae:	4a40      	ldr	r2, [pc, #256]	@ (8000ab0 <FND_Write+0x514>)
 80009b0:	6851      	ldr	r1, [r2, #4]
 80009b2:	2200      	movs	r2, #0
 80009b4:	4618      	mov	r0, r3
 80009b6:	f000 f9b8 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[1].GPIOx, seg[1].pinNum, PIN_SET);
 80009ba:	4b3d      	ldr	r3, [pc, #244]	@ (8000ab0 <FND_Write+0x514>)
 80009bc:	689b      	ldr	r3, [r3, #8]
 80009be:	4a3c      	ldr	r2, [pc, #240]	@ (8000ab0 <FND_Write+0x514>)
 80009c0:	68d1      	ldr	r1, [r2, #12]
 80009c2:	2201      	movs	r2, #1
 80009c4:	4618      	mov	r0, r3
 80009c6:	f000 f9b0 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[2].GPIOx, seg[2].pinNum, PIN_SET);
 80009ca:	4b39      	ldr	r3, [pc, #228]	@ (8000ab0 <FND_Write+0x514>)
 80009cc:	691b      	ldr	r3, [r3, #16]
 80009ce:	4a38      	ldr	r2, [pc, #224]	@ (8000ab0 <FND_Write+0x514>)
 80009d0:	6951      	ldr	r1, [r2, #20]
 80009d2:	2201      	movs	r2, #1
 80009d4:	4618      	mov	r0, r3
 80009d6:	f000 f9a8 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[3].GPIOx, seg[3].pinNum, PIN_RESET);
 80009da:	4b35      	ldr	r3, [pc, #212]	@ (8000ab0 <FND_Write+0x514>)
 80009dc:	699b      	ldr	r3, [r3, #24]
 80009de:	4a34      	ldr	r2, [pc, #208]	@ (8000ab0 <FND_Write+0x514>)
 80009e0:	69d1      	ldr	r1, [r2, #28]
 80009e2:	2200      	movs	r2, #0
 80009e4:	4618      	mov	r0, r3
 80009e6:	f000 f9a0 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[4].GPIOx, seg[4].pinNum, PIN_RESET);
 80009ea:	4b31      	ldr	r3, [pc, #196]	@ (8000ab0 <FND_Write+0x514>)
 80009ec:	6a1b      	ldr	r3, [r3, #32]
 80009ee:	4a30      	ldr	r2, [pc, #192]	@ (8000ab0 <FND_Write+0x514>)
 80009f0:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 80009f2:	2200      	movs	r2, #0
 80009f4:	4618      	mov	r0, r3
 80009f6:	f000 f998 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[5].GPIOx, seg[5].pinNum, PIN_SET);
 80009fa:	4b2d      	ldr	r3, [pc, #180]	@ (8000ab0 <FND_Write+0x514>)
 80009fc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80009fe:	4a2c      	ldr	r2, [pc, #176]	@ (8000ab0 <FND_Write+0x514>)
 8000a00:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8000a02:	2201      	movs	r2, #1
 8000a04:	4618      	mov	r0, r3
 8000a06:	f000 f990 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[6].GPIOx, seg[6].pinNum, PIN_SET);
 8000a0a:	4b29      	ldr	r3, [pc, #164]	@ (8000ab0 <FND_Write+0x514>)
 8000a0c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a0e:	4a28      	ldr	r2, [pc, #160]	@ (8000ab0 <FND_Write+0x514>)
 8000a10:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8000a12:	2201      	movs	r2, #1
 8000a14:	4618      	mov	r0, r3
 8000a16:	f000 f988 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[7].GPIOx, seg[7].pinNum, DOT);
 8000a1a:	4b25      	ldr	r3, [pc, #148]	@ (8000ab0 <FND_Write+0x514>)
 8000a1c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8000a1e:	4a24      	ldr	r2, [pc, #144]	@ (8000ab0 <FND_Write+0x514>)
 8000a20:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 8000a22:	78fa      	ldrb	r2, [r7, #3]
 8000a24:	4618      	mov	r0, r3
 8000a26:	f000 f980 	bl	8000d2a <GPIO_WritePin>
		break;
 8000a2a:	e147      	b.n	8000cbc <FND_Write+0x720>
	case 5:
		GPIO_WritePin(seg[0].GPIOx, seg[0].pinNum, PIN_SET);
 8000a2c:	4b20      	ldr	r3, [pc, #128]	@ (8000ab0 <FND_Write+0x514>)
 8000a2e:	681b      	ldr	r3, [r3, #0]
 8000a30:	4a1f      	ldr	r2, [pc, #124]	@ (8000ab0 <FND_Write+0x514>)
 8000a32:	6851      	ldr	r1, [r2, #4]
 8000a34:	2201      	movs	r2, #1
 8000a36:	4618      	mov	r0, r3
 8000a38:	f000 f977 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[1].GPIOx, seg[1].pinNum, PIN_RESET);
 8000a3c:	4b1c      	ldr	r3, [pc, #112]	@ (8000ab0 <FND_Write+0x514>)
 8000a3e:	689b      	ldr	r3, [r3, #8]
 8000a40:	4a1b      	ldr	r2, [pc, #108]	@ (8000ab0 <FND_Write+0x514>)
 8000a42:	68d1      	ldr	r1, [r2, #12]
 8000a44:	2200      	movs	r2, #0
 8000a46:	4618      	mov	r0, r3
 8000a48:	f000 f96f 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[2].GPIOx, seg[2].pinNum, PIN_SET);
 8000a4c:	4b18      	ldr	r3, [pc, #96]	@ (8000ab0 <FND_Write+0x514>)
 8000a4e:	691b      	ldr	r3, [r3, #16]
 8000a50:	4a17      	ldr	r2, [pc, #92]	@ (8000ab0 <FND_Write+0x514>)
 8000a52:	6951      	ldr	r1, [r2, #20]
 8000a54:	2201      	movs	r2, #1
 8000a56:	4618      	mov	r0, r3
 8000a58:	f000 f967 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[3].GPIOx, seg[3].pinNum, PIN_SET);
 8000a5c:	4b14      	ldr	r3, [pc, #80]	@ (8000ab0 <FND_Write+0x514>)
 8000a5e:	699b      	ldr	r3, [r3, #24]
 8000a60:	4a13      	ldr	r2, [pc, #76]	@ (8000ab0 <FND_Write+0x514>)
 8000a62:	69d1      	ldr	r1, [r2, #28]
 8000a64:	2201      	movs	r2, #1
 8000a66:	4618      	mov	r0, r3
 8000a68:	f000 f95f 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[4].GPIOx, seg[4].pinNum, PIN_RESET);
 8000a6c:	4b10      	ldr	r3, [pc, #64]	@ (8000ab0 <FND_Write+0x514>)
 8000a6e:	6a1b      	ldr	r3, [r3, #32]
 8000a70:	4a0f      	ldr	r2, [pc, #60]	@ (8000ab0 <FND_Write+0x514>)
 8000a72:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8000a74:	2200      	movs	r2, #0
 8000a76:	4618      	mov	r0, r3
 8000a78:	f000 f957 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[5].GPIOx, seg[5].pinNum, PIN_SET);
 8000a7c:	4b0c      	ldr	r3, [pc, #48]	@ (8000ab0 <FND_Write+0x514>)
 8000a7e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000a80:	4a0b      	ldr	r2, [pc, #44]	@ (8000ab0 <FND_Write+0x514>)
 8000a82:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8000a84:	2201      	movs	r2, #1
 8000a86:	4618      	mov	r0, r3
 8000a88:	f000 f94f 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[6].GPIOx, seg[6].pinNum, PIN_SET);
 8000a8c:	4b08      	ldr	r3, [pc, #32]	@ (8000ab0 <FND_Write+0x514>)
 8000a8e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a90:	4a07      	ldr	r2, [pc, #28]	@ (8000ab0 <FND_Write+0x514>)
 8000a92:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8000a94:	2201      	movs	r2, #1
 8000a96:	4618      	mov	r0, r3
 8000a98:	f000 f947 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[7].GPIOx, seg[7].pinNum, DOT);
 8000a9c:	4b04      	ldr	r3, [pc, #16]	@ (8000ab0 <FND_Write+0x514>)
 8000a9e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8000aa0:	4a03      	ldr	r2, [pc, #12]	@ (8000ab0 <FND_Write+0x514>)
 8000aa2:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 8000aa4:	78fa      	ldrb	r2, [r7, #3]
 8000aa6:	4618      	mov	r0, r3
 8000aa8:	f000 f93f 	bl	8000d2a <GPIO_WritePin>
		break;
 8000aac:	e106      	b.n	8000cbc <FND_Write+0x720>
 8000aae:	bf00      	nop
 8000ab0:	20000000 	.word	0x20000000
	case 6:
		GPIO_WritePin(seg[0].GPIOx, seg[0].pinNum, PIN_SET);
 8000ab4:	4b83      	ldr	r3, [pc, #524]	@ (8000cc4 <FND_Write+0x728>)
 8000ab6:	681b      	ldr	r3, [r3, #0]
 8000ab8:	4a82      	ldr	r2, [pc, #520]	@ (8000cc4 <FND_Write+0x728>)
 8000aba:	6851      	ldr	r1, [r2, #4]
 8000abc:	2201      	movs	r2, #1
 8000abe:	4618      	mov	r0, r3
 8000ac0:	f000 f933 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[1].GPIOx, seg[1].pinNum, PIN_RESET);
 8000ac4:	4b7f      	ldr	r3, [pc, #508]	@ (8000cc4 <FND_Write+0x728>)
 8000ac6:	689b      	ldr	r3, [r3, #8]
 8000ac8:	4a7e      	ldr	r2, [pc, #504]	@ (8000cc4 <FND_Write+0x728>)
 8000aca:	68d1      	ldr	r1, [r2, #12]
 8000acc:	2200      	movs	r2, #0
 8000ace:	4618      	mov	r0, r3
 8000ad0:	f000 f92b 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[2].GPIOx, seg[2].pinNum, PIN_SET);
 8000ad4:	4b7b      	ldr	r3, [pc, #492]	@ (8000cc4 <FND_Write+0x728>)
 8000ad6:	691b      	ldr	r3, [r3, #16]
 8000ad8:	4a7a      	ldr	r2, [pc, #488]	@ (8000cc4 <FND_Write+0x728>)
 8000ada:	6951      	ldr	r1, [r2, #20]
 8000adc:	2201      	movs	r2, #1
 8000ade:	4618      	mov	r0, r3
 8000ae0:	f000 f923 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[3].GPIOx, seg[3].pinNum, PIN_SET);
 8000ae4:	4b77      	ldr	r3, [pc, #476]	@ (8000cc4 <FND_Write+0x728>)
 8000ae6:	699b      	ldr	r3, [r3, #24]
 8000ae8:	4a76      	ldr	r2, [pc, #472]	@ (8000cc4 <FND_Write+0x728>)
 8000aea:	69d1      	ldr	r1, [r2, #28]
 8000aec:	2201      	movs	r2, #1
 8000aee:	4618      	mov	r0, r3
 8000af0:	f000 f91b 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[4].GPIOx, seg[4].pinNum, PIN_SET);
 8000af4:	4b73      	ldr	r3, [pc, #460]	@ (8000cc4 <FND_Write+0x728>)
 8000af6:	6a1b      	ldr	r3, [r3, #32]
 8000af8:	4a72      	ldr	r2, [pc, #456]	@ (8000cc4 <FND_Write+0x728>)
 8000afa:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8000afc:	2201      	movs	r2, #1
 8000afe:	4618      	mov	r0, r3
 8000b00:	f000 f913 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[5].GPIOx, seg[5].pinNum, PIN_SET);
 8000b04:	4b6f      	ldr	r3, [pc, #444]	@ (8000cc4 <FND_Write+0x728>)
 8000b06:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000b08:	4a6e      	ldr	r2, [pc, #440]	@ (8000cc4 <FND_Write+0x728>)
 8000b0a:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8000b0c:	2201      	movs	r2, #1
 8000b0e:	4618      	mov	r0, r3
 8000b10:	f000 f90b 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[6].GPIOx, seg[6].pinNum, PIN_SET);
 8000b14:	4b6b      	ldr	r3, [pc, #428]	@ (8000cc4 <FND_Write+0x728>)
 8000b16:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b18:	4a6a      	ldr	r2, [pc, #424]	@ (8000cc4 <FND_Write+0x728>)
 8000b1a:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8000b1c:	2201      	movs	r2, #1
 8000b1e:	4618      	mov	r0, r3
 8000b20:	f000 f903 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[7].GPIOx, seg[7].pinNum, DOT);
 8000b24:	4b67      	ldr	r3, [pc, #412]	@ (8000cc4 <FND_Write+0x728>)
 8000b26:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8000b28:	4a66      	ldr	r2, [pc, #408]	@ (8000cc4 <FND_Write+0x728>)
 8000b2a:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 8000b2c:	78fa      	ldrb	r2, [r7, #3]
 8000b2e:	4618      	mov	r0, r3
 8000b30:	f000 f8fb 	bl	8000d2a <GPIO_WritePin>
		break;
 8000b34:	e0c2      	b.n	8000cbc <FND_Write+0x720>
	case 7:
		GPIO_WritePin(seg[0].GPIOx, seg[0].pinNum, PIN_SET);
 8000b36:	4b63      	ldr	r3, [pc, #396]	@ (8000cc4 <FND_Write+0x728>)
 8000b38:	681b      	ldr	r3, [r3, #0]
 8000b3a:	4a62      	ldr	r2, [pc, #392]	@ (8000cc4 <FND_Write+0x728>)
 8000b3c:	6851      	ldr	r1, [r2, #4]
 8000b3e:	2201      	movs	r2, #1
 8000b40:	4618      	mov	r0, r3
 8000b42:	f000 f8f2 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[1].GPIOx, seg[1].pinNum, PIN_SET);
 8000b46:	4b5f      	ldr	r3, [pc, #380]	@ (8000cc4 <FND_Write+0x728>)
 8000b48:	689b      	ldr	r3, [r3, #8]
 8000b4a:	4a5e      	ldr	r2, [pc, #376]	@ (8000cc4 <FND_Write+0x728>)
 8000b4c:	68d1      	ldr	r1, [r2, #12]
 8000b4e:	2201      	movs	r2, #1
 8000b50:	4618      	mov	r0, r3
 8000b52:	f000 f8ea 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[2].GPIOx, seg[2].pinNum, PIN_SET);
 8000b56:	4b5b      	ldr	r3, [pc, #364]	@ (8000cc4 <FND_Write+0x728>)
 8000b58:	691b      	ldr	r3, [r3, #16]
 8000b5a:	4a5a      	ldr	r2, [pc, #360]	@ (8000cc4 <FND_Write+0x728>)
 8000b5c:	6951      	ldr	r1, [r2, #20]
 8000b5e:	2201      	movs	r2, #1
 8000b60:	4618      	mov	r0, r3
 8000b62:	f000 f8e2 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[3].GPIOx, seg[3].pinNum, PIN_RESET);
 8000b66:	4b57      	ldr	r3, [pc, #348]	@ (8000cc4 <FND_Write+0x728>)
 8000b68:	699b      	ldr	r3, [r3, #24]
 8000b6a:	4a56      	ldr	r2, [pc, #344]	@ (8000cc4 <FND_Write+0x728>)
 8000b6c:	69d1      	ldr	r1, [r2, #28]
 8000b6e:	2200      	movs	r2, #0
 8000b70:	4618      	mov	r0, r3
 8000b72:	f000 f8da 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[4].GPIOx, seg[4].pinNum, PIN_RESET);
 8000b76:	4b53      	ldr	r3, [pc, #332]	@ (8000cc4 <FND_Write+0x728>)
 8000b78:	6a1b      	ldr	r3, [r3, #32]
 8000b7a:	4a52      	ldr	r2, [pc, #328]	@ (8000cc4 <FND_Write+0x728>)
 8000b7c:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8000b7e:	2200      	movs	r2, #0
 8000b80:	4618      	mov	r0, r3
 8000b82:	f000 f8d2 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[5].GPIOx, seg[5].pinNum, PIN_RESET);
 8000b86:	4b4f      	ldr	r3, [pc, #316]	@ (8000cc4 <FND_Write+0x728>)
 8000b88:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000b8a:	4a4e      	ldr	r2, [pc, #312]	@ (8000cc4 <FND_Write+0x728>)
 8000b8c:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8000b8e:	2200      	movs	r2, #0
 8000b90:	4618      	mov	r0, r3
 8000b92:	f000 f8ca 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[6].GPIOx, seg[6].pinNum, PIN_RESET);
 8000b96:	4b4b      	ldr	r3, [pc, #300]	@ (8000cc4 <FND_Write+0x728>)
 8000b98:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b9a:	4a4a      	ldr	r2, [pc, #296]	@ (8000cc4 <FND_Write+0x728>)
 8000b9c:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8000b9e:	2200      	movs	r2, #0
 8000ba0:	4618      	mov	r0, r3
 8000ba2:	f000 f8c2 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[7].GPIOx, seg[7].pinNum, DOT);
 8000ba6:	4b47      	ldr	r3, [pc, #284]	@ (8000cc4 <FND_Write+0x728>)
 8000ba8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8000baa:	4a46      	ldr	r2, [pc, #280]	@ (8000cc4 <FND_Write+0x728>)
 8000bac:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 8000bae:	78fa      	ldrb	r2, [r7, #3]
 8000bb0:	4618      	mov	r0, r3
 8000bb2:	f000 f8ba 	bl	8000d2a <GPIO_WritePin>
		break;
 8000bb6:	e081      	b.n	8000cbc <FND_Write+0x720>
	case 8:
		GPIO_WritePin(seg[0].GPIOx, seg[0].pinNum, PIN_SET);
 8000bb8:	4b42      	ldr	r3, [pc, #264]	@ (8000cc4 <FND_Write+0x728>)
 8000bba:	681b      	ldr	r3, [r3, #0]
 8000bbc:	4a41      	ldr	r2, [pc, #260]	@ (8000cc4 <FND_Write+0x728>)
 8000bbe:	6851      	ldr	r1, [r2, #4]
 8000bc0:	2201      	movs	r2, #1
 8000bc2:	4618      	mov	r0, r3
 8000bc4:	f000 f8b1 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[1].GPIOx, seg[1].pinNum, PIN_SET);
 8000bc8:	4b3e      	ldr	r3, [pc, #248]	@ (8000cc4 <FND_Write+0x728>)
 8000bca:	689b      	ldr	r3, [r3, #8]
 8000bcc:	4a3d      	ldr	r2, [pc, #244]	@ (8000cc4 <FND_Write+0x728>)
 8000bce:	68d1      	ldr	r1, [r2, #12]
 8000bd0:	2201      	movs	r2, #1
 8000bd2:	4618      	mov	r0, r3
 8000bd4:	f000 f8a9 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[2].GPIOx, seg[2].pinNum, PIN_SET);
 8000bd8:	4b3a      	ldr	r3, [pc, #232]	@ (8000cc4 <FND_Write+0x728>)
 8000bda:	691b      	ldr	r3, [r3, #16]
 8000bdc:	4a39      	ldr	r2, [pc, #228]	@ (8000cc4 <FND_Write+0x728>)
 8000bde:	6951      	ldr	r1, [r2, #20]
 8000be0:	2201      	movs	r2, #1
 8000be2:	4618      	mov	r0, r3
 8000be4:	f000 f8a1 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[3].GPIOx, seg[3].pinNum, PIN_SET);
 8000be8:	4b36      	ldr	r3, [pc, #216]	@ (8000cc4 <FND_Write+0x728>)
 8000bea:	699b      	ldr	r3, [r3, #24]
 8000bec:	4a35      	ldr	r2, [pc, #212]	@ (8000cc4 <FND_Write+0x728>)
 8000bee:	69d1      	ldr	r1, [r2, #28]
 8000bf0:	2201      	movs	r2, #1
 8000bf2:	4618      	mov	r0, r3
 8000bf4:	f000 f899 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[4].GPIOx, seg[4].pinNum, PIN_SET);
 8000bf8:	4b32      	ldr	r3, [pc, #200]	@ (8000cc4 <FND_Write+0x728>)
 8000bfa:	6a1b      	ldr	r3, [r3, #32]
 8000bfc:	4a31      	ldr	r2, [pc, #196]	@ (8000cc4 <FND_Write+0x728>)
 8000bfe:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8000c00:	2201      	movs	r2, #1
 8000c02:	4618      	mov	r0, r3
 8000c04:	f000 f891 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[5].GPIOx, seg[5].pinNum, PIN_SET);
 8000c08:	4b2e      	ldr	r3, [pc, #184]	@ (8000cc4 <FND_Write+0x728>)
 8000c0a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000c0c:	4a2d      	ldr	r2, [pc, #180]	@ (8000cc4 <FND_Write+0x728>)
 8000c0e:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8000c10:	2201      	movs	r2, #1
 8000c12:	4618      	mov	r0, r3
 8000c14:	f000 f889 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[6].GPIOx, seg[6].pinNum, PIN_SET);
 8000c18:	4b2a      	ldr	r3, [pc, #168]	@ (8000cc4 <FND_Write+0x728>)
 8000c1a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c1c:	4a29      	ldr	r2, [pc, #164]	@ (8000cc4 <FND_Write+0x728>)
 8000c1e:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8000c20:	2201      	movs	r2, #1
 8000c22:	4618      	mov	r0, r3
 8000c24:	f000 f881 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[7].GPIOx, seg[7].pinNum, DOT);
 8000c28:	4b26      	ldr	r3, [pc, #152]	@ (8000cc4 <FND_Write+0x728>)
 8000c2a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8000c2c:	4a25      	ldr	r2, [pc, #148]	@ (8000cc4 <FND_Write+0x728>)
 8000c2e:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 8000c30:	78fa      	ldrb	r2, [r7, #3]
 8000c32:	4618      	mov	r0, r3
 8000c34:	f000 f879 	bl	8000d2a <GPIO_WritePin>
		break;
 8000c38:	e040      	b.n	8000cbc <FND_Write+0x720>
	case 9:
		GPIO_WritePin(seg[0].GPIOx, seg[0].pinNum, PIN_SET);
 8000c3a:	4b22      	ldr	r3, [pc, #136]	@ (8000cc4 <FND_Write+0x728>)
 8000c3c:	681b      	ldr	r3, [r3, #0]
 8000c3e:	4a21      	ldr	r2, [pc, #132]	@ (8000cc4 <FND_Write+0x728>)
 8000c40:	6851      	ldr	r1, [r2, #4]
 8000c42:	2201      	movs	r2, #1
 8000c44:	4618      	mov	r0, r3
 8000c46:	f000 f870 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[1].GPIOx, seg[1].pinNum, PIN_SET);
 8000c4a:	4b1e      	ldr	r3, [pc, #120]	@ (8000cc4 <FND_Write+0x728>)
 8000c4c:	689b      	ldr	r3, [r3, #8]
 8000c4e:	4a1d      	ldr	r2, [pc, #116]	@ (8000cc4 <FND_Write+0x728>)
 8000c50:	68d1      	ldr	r1, [r2, #12]
 8000c52:	2201      	movs	r2, #1
 8000c54:	4618      	mov	r0, r3
 8000c56:	f000 f868 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[2].GPIOx, seg[2].pinNum, PIN_SET);
 8000c5a:	4b1a      	ldr	r3, [pc, #104]	@ (8000cc4 <FND_Write+0x728>)
 8000c5c:	691b      	ldr	r3, [r3, #16]
 8000c5e:	4a19      	ldr	r2, [pc, #100]	@ (8000cc4 <FND_Write+0x728>)
 8000c60:	6951      	ldr	r1, [r2, #20]
 8000c62:	2201      	movs	r2, #1
 8000c64:	4618      	mov	r0, r3
 8000c66:	f000 f860 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[3].GPIOx, seg[3].pinNum, PIN_SET);
 8000c6a:	4b16      	ldr	r3, [pc, #88]	@ (8000cc4 <FND_Write+0x728>)
 8000c6c:	699b      	ldr	r3, [r3, #24]
 8000c6e:	4a15      	ldr	r2, [pc, #84]	@ (8000cc4 <FND_Write+0x728>)
 8000c70:	69d1      	ldr	r1, [r2, #28]
 8000c72:	2201      	movs	r2, #1
 8000c74:	4618      	mov	r0, r3
 8000c76:	f000 f858 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[4].GPIOx, seg[4].pinNum, PIN_RESET);
 8000c7a:	4b12      	ldr	r3, [pc, #72]	@ (8000cc4 <FND_Write+0x728>)
 8000c7c:	6a1b      	ldr	r3, [r3, #32]
 8000c7e:	4a11      	ldr	r2, [pc, #68]	@ (8000cc4 <FND_Write+0x728>)
 8000c80:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8000c82:	2200      	movs	r2, #0
 8000c84:	4618      	mov	r0, r3
 8000c86:	f000 f850 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[5].GPIOx, seg[5].pinNum, PIN_SET);
 8000c8a:	4b0e      	ldr	r3, [pc, #56]	@ (8000cc4 <FND_Write+0x728>)
 8000c8c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000c8e:	4a0d      	ldr	r2, [pc, #52]	@ (8000cc4 <FND_Write+0x728>)
 8000c90:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8000c92:	2201      	movs	r2, #1
 8000c94:	4618      	mov	r0, r3
 8000c96:	f000 f848 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[6].GPIOx, seg[6].pinNum, PIN_SET);
 8000c9a:	4b0a      	ldr	r3, [pc, #40]	@ (8000cc4 <FND_Write+0x728>)
 8000c9c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c9e:	4a09      	ldr	r2, [pc, #36]	@ (8000cc4 <FND_Write+0x728>)
 8000ca0:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8000ca2:	2201      	movs	r2, #1
 8000ca4:	4618      	mov	r0, r3
 8000ca6:	f000 f840 	bl	8000d2a <GPIO_WritePin>
		GPIO_WritePin(seg[7].GPIOx, seg[7].pinNum, DOT);
 8000caa:	4b06      	ldr	r3, [pc, #24]	@ (8000cc4 <FND_Write+0x728>)
 8000cac:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8000cae:	4a05      	ldr	r2, [pc, #20]	@ (8000cc4 <FND_Write+0x728>)
 8000cb0:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 8000cb2:	78fa      	ldrb	r2, [r7, #3]
 8000cb4:	4618      	mov	r0, r3
 8000cb6:	f000 f838 	bl	8000d2a <GPIO_WritePin>
		break;
 8000cba:	bf00      	nop
	}
}
 8000cbc:	bf00      	nop
 8000cbe:	3708      	adds	r7, #8
 8000cc0:	46bd      	mov	sp, r7
 8000cc2:	bd80      	pop	{r7, pc}
 8000cc4:	20000000 	.word	0x20000000

08000cc8 <GPIO_Init>:
#include "GPIO.h"

void GPIO_Init(GPIO_TypeDef *GPIOx, uint32_t pinNum, pin_mode_t pinMode)
{
 8000cc8:	b480      	push	{r7}
 8000cca:	b085      	sub	sp, #20
 8000ccc:	af00      	add	r7, sp, #0
 8000cce:	60f8      	str	r0, [r7, #12]
 8000cd0:	60b9      	str	r1, [r7, #8]
 8000cd2:	4613      	mov	r3, r2
 8000cd4:	71fb      	strb	r3, [r7, #7]
   if(pinMode == OUTPUT) {
 8000cd6:	79fb      	ldrb	r3, [r7, #7]
 8000cd8:	2b00      	cmp	r3, #0
 8000cda:	d115      	bne.n	8000d08 <GPIO_Init+0x40>
      GPIOx->MODER |= (0x01U << (pinNum*2));
 8000cdc:	68fb      	ldr	r3, [r7, #12]
 8000cde:	681a      	ldr	r2, [r3, #0]
 8000ce0:	68bb      	ldr	r3, [r7, #8]
 8000ce2:	005b      	lsls	r3, r3, #1
 8000ce4:	2101      	movs	r1, #1
 8000ce6:	fa01 f303 	lsl.w	r3, r1, r3
 8000cea:	431a      	orrs	r2, r3
 8000cec:	68fb      	ldr	r3, [r7, #12]
 8000cee:	601a      	str	r2, [r3, #0]
      GPIOx->MODER &= ~(0x02U << (pinNum*2));
 8000cf0:	68fb      	ldr	r3, [r7, #12]
 8000cf2:	681a      	ldr	r2, [r3, #0]
 8000cf4:	68bb      	ldr	r3, [r7, #8]
 8000cf6:	005b      	lsls	r3, r3, #1
 8000cf8:	2102      	movs	r1, #2
 8000cfa:	fa01 f303 	lsl.w	r3, r1, r3
 8000cfe:	43db      	mvns	r3, r3
 8000d00:	401a      	ands	r2, r3
 8000d02:	68fb      	ldr	r3, [r7, #12]
 8000d04:	601a      	str	r2, [r3, #0]
   }
   else {
      GPIOx->MODER &= ~(0x03U << (pinNum*2));
   }
}
 8000d06:	e00a      	b.n	8000d1e <GPIO_Init+0x56>
      GPIOx->MODER &= ~(0x03U << (pinNum*2));
 8000d08:	68fb      	ldr	r3, [r7, #12]
 8000d0a:	681a      	ldr	r2, [r3, #0]
 8000d0c:	68bb      	ldr	r3, [r7, #8]
 8000d0e:	005b      	lsls	r3, r3, #1
 8000d10:	2103      	movs	r1, #3
 8000d12:	fa01 f303 	lsl.w	r3, r1, r3
 8000d16:	43db      	mvns	r3, r3
 8000d18:	401a      	ands	r2, r3
 8000d1a:	68fb      	ldr	r3, [r7, #12]
 8000d1c:	601a      	str	r2, [r3, #0]
}
 8000d1e:	bf00      	nop
 8000d20:	3714      	adds	r7, #20
 8000d22:	46bd      	mov	sp, r7
 8000d24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d28:	4770      	bx	lr

08000d2a <GPIO_WritePin>:

void GPIO_WritePin(GPIO_TypeDef *GPIOx, uint32_t pinNum, pin_state_t pinState)
{
 8000d2a:	b480      	push	{r7}
 8000d2c:	b085      	sub	sp, #20
 8000d2e:	af00      	add	r7, sp, #0
 8000d30:	60f8      	str	r0, [r7, #12]
 8000d32:	60b9      	str	r1, [r7, #8]
 8000d34:	4613      	mov	r3, r2
 8000d36:	71fb      	strb	r3, [r7, #7]
   if(pinState == PIN_SET){
 8000d38:	79fb      	ldrb	r3, [r7, #7]
 8000d3a:	2b01      	cmp	r3, #1
 8000d3c:	d109      	bne.n	8000d52 <GPIO_WritePin+0x28>
      GPIOx->ODR |= (1U<<pinNum);
 8000d3e:	68fb      	ldr	r3, [r7, #12]
 8000d40:	695a      	ldr	r2, [r3, #20]
 8000d42:	2101      	movs	r1, #1
 8000d44:	68bb      	ldr	r3, [r7, #8]
 8000d46:	fa01 f303 	lsl.w	r3, r1, r3
 8000d4a:	431a      	orrs	r2, r3
 8000d4c:	68fb      	ldr	r3, [r7, #12]
 8000d4e:	615a      	str	r2, [r3, #20]
   }
   else {
      GPIOx->ODR &= ~(1U<<pinNum);
   }
}
 8000d50:	e009      	b.n	8000d66 <GPIO_WritePin+0x3c>
      GPIOx->ODR &= ~(1U<<pinNum);
 8000d52:	68fb      	ldr	r3, [r7, #12]
 8000d54:	695a      	ldr	r2, [r3, #20]
 8000d56:	2101      	movs	r1, #1
 8000d58:	68bb      	ldr	r3, [r7, #8]
 8000d5a:	fa01 f303 	lsl.w	r3, r1, r3
 8000d5e:	43db      	mvns	r3, r3
 8000d60:	401a      	ands	r2, r3
 8000d62:	68fb      	ldr	r3, [r7, #12]
 8000d64:	615a      	str	r2, [r3, #20]
}
 8000d66:	bf00      	nop
 8000d68:	3714      	adds	r7, #20
 8000d6a:	46bd      	mov	sp, r7
 8000d6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d70:	4770      	bx	lr

08000d72 <GPIO_ReadPin>:

uint32_t GPIO_ReadPin(GPIO_TypeDef *GPIOx, uint32_t pinNum)
{
 8000d72:	b480      	push	{r7}
 8000d74:	b083      	sub	sp, #12
 8000d76:	af00      	add	r7, sp, #0
 8000d78:	6078      	str	r0, [r7, #4]
 8000d7a:	6039      	str	r1, [r7, #0]
   return ((GPIOx->IDR & (1U<<pinNum)) ? 1: 0);
 8000d7c:	687b      	ldr	r3, [r7, #4]
 8000d7e:	691a      	ldr	r2, [r3, #16]
 8000d80:	2101      	movs	r1, #1
 8000d82:	683b      	ldr	r3, [r7, #0]
 8000d84:	fa01 f303 	lsl.w	r3, r1, r3
 8000d88:	4013      	ands	r3, r2
 8000d8a:	2b00      	cmp	r3, #0
 8000d8c:	bf14      	ite	ne
 8000d8e:	2301      	movne	r3, #1
 8000d90:	2300      	moveq	r3, #0
 8000d92:	b2db      	uxtb	r3, r3
}
 8000d94:	4618      	mov	r0, r3
 8000d96:	370c      	adds	r7, #12
 8000d98:	46bd      	mov	sp, r7
 8000d9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d9e:	4770      	bx	lr

08000da0 <SystemClock_Init>:
#include "SystemClock.h"

void SystemClock_Init()
{
 8000da0:	b480      	push	{r7}
 8000da2:	af00      	add	r7, sp, #0
	RCC-> AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 8000da4:	4b0b      	ldr	r3, [pc, #44]	@ (8000dd4 <SystemClock_Init+0x34>)
 8000da6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000da8:	4a0a      	ldr	r2, [pc, #40]	@ (8000dd4 <SystemClock_Init+0x34>)
 8000daa:	f043 0301 	orr.w	r3, r3, #1
 8000dae:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC-> AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
 8000db0:	4b08      	ldr	r3, [pc, #32]	@ (8000dd4 <SystemClock_Init+0x34>)
 8000db2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000db4:	4a07      	ldr	r2, [pc, #28]	@ (8000dd4 <SystemClock_Init+0x34>)
 8000db6:	f043 0302 	orr.w	r3, r3, #2
 8000dba:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC-> AHB1ENR |= RCC_AHB1ENR_GPIOCEN;
 8000dbc:	4b05      	ldr	r3, [pc, #20]	@ (8000dd4 <SystemClock_Init+0x34>)
 8000dbe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000dc0:	4a04      	ldr	r2, [pc, #16]	@ (8000dd4 <SystemClock_Init+0x34>)
 8000dc2:	f043 0304 	orr.w	r3, r3, #4
 8000dc6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000dc8:	bf00      	nop
 8000dca:	46bd      	mov	sp, r7
 8000dcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dd0:	4770      	bx	lr
 8000dd2:	bf00      	nop
 8000dd4:	40023800 	.word	0x40023800

08000dd8 <delay>:

void delay(int loop)
{
 8000dd8:	b480      	push	{r7}
 8000dda:	b085      	sub	sp, #20
 8000ddc:	af00      	add	r7, sp, #0
 8000dde:	6078      	str	r0, [r7, #4]
	for (int j = 0; j< loop; j++){
 8000de0:	2300      	movs	r3, #0
 8000de2:	60fb      	str	r3, [r7, #12]
 8000de4:	e00c      	b.n	8000e00 <delay+0x28>
		for (volatile int i = 0; i < 1000; i++){}
 8000de6:	2300      	movs	r3, #0
 8000de8:	60bb      	str	r3, [r7, #8]
 8000dea:	e002      	b.n	8000df2 <delay+0x1a>
 8000dec:	68bb      	ldr	r3, [r7, #8]
 8000dee:	3301      	adds	r3, #1
 8000df0:	60bb      	str	r3, [r7, #8]
 8000df2:	68bb      	ldr	r3, [r7, #8]
 8000df4:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8000df8:	dbf8      	blt.n	8000dec <delay+0x14>
	for (int j = 0; j< loop; j++){
 8000dfa:	68fb      	ldr	r3, [r7, #12]
 8000dfc:	3301      	adds	r3, #1
 8000dfe:	60fb      	str	r3, [r7, #12]
 8000e00:	68fa      	ldr	r2, [r7, #12]
 8000e02:	687b      	ldr	r3, [r7, #4]
 8000e04:	429a      	cmp	r2, r3
 8000e06:	dbee      	blt.n	8000de6 <delay+0xe>
	}
}
 8000e08:	bf00      	nop
 8000e0a:	bf00      	nop
 8000e0c:	3714      	adds	r7, #20
 8000e0e:	46bd      	mov	sp, r7
 8000e10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e14:	4770      	bx	lr

08000e16 <main>:
#include <stdint.h>
#include "ap_main.h"

int main(void)
{
 8000e16:	b580      	push	{r7, lr}
 8000e18:	af00      	add	r7, sp, #0
	ap_Init();
 8000e1a:	f7ff fb0b 	bl	8000434 <ap_Init>
    while(1)
    {
    	ap_main();
 8000e1e:	f7ff f9db 	bl	80001d8 <ap_main>
 8000e22:	e7fc      	b.n	8000e1e <main+0x8>

08000e24 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000e24:	480d      	ldr	r0, [pc, #52]	@ (8000e5c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000e26:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000e28:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000e2c:	480c      	ldr	r0, [pc, #48]	@ (8000e60 <LoopForever+0x6>)
  ldr r1, =_edata
 8000e2e:	490d      	ldr	r1, [pc, #52]	@ (8000e64 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000e30:	4a0d      	ldr	r2, [pc, #52]	@ (8000e68 <LoopForever+0xe>)
  movs r3, #0
 8000e32:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000e34:	e002      	b.n	8000e3c <LoopCopyDataInit>

08000e36 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000e36:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000e38:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000e3a:	3304      	adds	r3, #4

08000e3c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000e3c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000e3e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000e40:	d3f9      	bcc.n	8000e36 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000e42:	4a0a      	ldr	r2, [pc, #40]	@ (8000e6c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000e44:	4c0a      	ldr	r4, [pc, #40]	@ (8000e70 <LoopForever+0x16>)
  movs r3, #0
 8000e46:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000e48:	e001      	b.n	8000e4e <LoopFillZerobss>

08000e4a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000e4a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000e4c:	3204      	adds	r2, #4

08000e4e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000e4e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000e50:	d3fb      	bcc.n	8000e4a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000e52:	f000 f811 	bl	8000e78 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000e56:	f7ff ffde 	bl	8000e16 <main>

08000e5a <LoopForever>:

LoopForever:
  b LoopForever
 8000e5a:	e7fe      	b.n	8000e5a <LoopForever>
  ldr   r0, =_estack
 8000e5c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000e60:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000e64:	20000060 	.word	0x20000060
  ldr r2, =_sidata
 8000e68:	08000ee0 	.word	0x08000ee0
  ldr r2, =_sbss
 8000e6c:	20000060 	.word	0x20000060
  ldr r4, =_ebss
 8000e70:	200000a0 	.word	0x200000a0

08000e74 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000e74:	e7fe      	b.n	8000e74 <ADC_IRQHandler>
	...

08000e78 <__libc_init_array>:
 8000e78:	b570      	push	{r4, r5, r6, lr}
 8000e7a:	4d0d      	ldr	r5, [pc, #52]	@ (8000eb0 <__libc_init_array+0x38>)
 8000e7c:	4c0d      	ldr	r4, [pc, #52]	@ (8000eb4 <__libc_init_array+0x3c>)
 8000e7e:	1b64      	subs	r4, r4, r5
 8000e80:	10a4      	asrs	r4, r4, #2
 8000e82:	2600      	movs	r6, #0
 8000e84:	42a6      	cmp	r6, r4
 8000e86:	d109      	bne.n	8000e9c <__libc_init_array+0x24>
 8000e88:	4d0b      	ldr	r5, [pc, #44]	@ (8000eb8 <__libc_init_array+0x40>)
 8000e8a:	4c0c      	ldr	r4, [pc, #48]	@ (8000ebc <__libc_init_array+0x44>)
 8000e8c:	f000 f818 	bl	8000ec0 <_init>
 8000e90:	1b64      	subs	r4, r4, r5
 8000e92:	10a4      	asrs	r4, r4, #2
 8000e94:	2600      	movs	r6, #0
 8000e96:	42a6      	cmp	r6, r4
 8000e98:	d105      	bne.n	8000ea6 <__libc_init_array+0x2e>
 8000e9a:	bd70      	pop	{r4, r5, r6, pc}
 8000e9c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000ea0:	4798      	blx	r3
 8000ea2:	3601      	adds	r6, #1
 8000ea4:	e7ee      	b.n	8000e84 <__libc_init_array+0xc>
 8000ea6:	f855 3b04 	ldr.w	r3, [r5], #4
 8000eaa:	4798      	blx	r3
 8000eac:	3601      	adds	r6, #1
 8000eae:	e7f2      	b.n	8000e96 <__libc_init_array+0x1e>
 8000eb0:	08000ed8 	.word	0x08000ed8
 8000eb4:	08000ed8 	.word	0x08000ed8
 8000eb8:	08000ed8 	.word	0x08000ed8
 8000ebc:	08000edc 	.word	0x08000edc

08000ec0 <_init>:
 8000ec0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ec2:	bf00      	nop
 8000ec4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000ec6:	bc08      	pop	{r3}
 8000ec8:	469e      	mov	lr, r3
 8000eca:	4770      	bx	lr

08000ecc <_fini>:
 8000ecc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ece:	bf00      	nop
 8000ed0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000ed2:	bc08      	pop	{r3}
 8000ed4:	469e      	mov	lr, r3
 8000ed6:	4770      	bx	lr
